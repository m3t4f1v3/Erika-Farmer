import { Collection } from "../deps.ts";
/** Maps the <userId, channelId> for dm channels */ export const dmChannelIds = new Collection();
/** Sends a direct message to a user. This can take two API calls. The first call is to create a dm channel. Then sending the message to that channel. Channel ids are cached as needed to prevent duplicate requests. */ export async function sendDirectMessage(bot, userId, content) {
    if (typeof content === "string") content = {
        content
    };
    // GET CHANNEL ID FROM CACHE OR CREATE THE CHANNEL FOR THIS USER
    const cachedChannelId = dmChannelIds.get(userId);
    // IF ID IS CACHED SEND MESSAGE DIRECTLY
    if (cachedChannelId) return bot.helpers.sendMessage(cachedChannelId, content);
    // CREATE A NEW DM CHANNEL AND PLUCK ITS ID
    const channel = await bot.helpers.getDmChannel(userId);
    // CACHE IT FOR FUTURE REQUESTS
    dmChannelIds.set(userId, channel.id);
    // CACHE CHANNEL IF NEEDED
    return bot.helpers.sendMessage(channel.id, content);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb3QsIENvbGxlY3Rpb24sIENyZWF0ZU1lc3NhZ2UgfSBmcm9tIFwiLi4vZGVwcy50c1wiO1xuXG4vKiogTWFwcyB0aGUgPHVzZXJJZCwgY2hhbm5lbElkPiBmb3IgZG0gY2hhbm5lbHMgKi9cbmV4cG9ydCBjb25zdCBkbUNoYW5uZWxJZHMgPSBuZXcgQ29sbGVjdGlvbjxiaWdpbnQsIGJpZ2ludD4oKTtcblxuLyoqIFNlbmRzIGEgZGlyZWN0IG1lc3NhZ2UgdG8gYSB1c2VyLiBUaGlzIGNhbiB0YWtlIHR3byBBUEkgY2FsbHMuIFRoZSBmaXJzdCBjYWxsIGlzIHRvIGNyZWF0ZSBhIGRtIGNoYW5uZWwuIFRoZW4gc2VuZGluZyB0aGUgbWVzc2FnZSB0byB0aGF0IGNoYW5uZWwuIENoYW5uZWwgaWRzIGFyZSBjYWNoZWQgYXMgbmVlZGVkIHRvIHByZXZlbnQgZHVwbGljYXRlIHJlcXVlc3RzLiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNlbmREaXJlY3RNZXNzYWdlKFxuICBib3Q6IEJvdCxcbiAgdXNlcklkOiBiaWdpbnQsXG4gIGNvbnRlbnQ6IHN0cmluZyB8IENyZWF0ZU1lc3NhZ2UsXG4pIHtcbiAgaWYgKHR5cGVvZiBjb250ZW50ID09PSBcInN0cmluZ1wiKSBjb250ZW50ID0geyBjb250ZW50IH07XG5cbiAgLy8gR0VUIENIQU5ORUwgSUQgRlJPTSBDQUNIRSBPUiBDUkVBVEUgVEhFIENIQU5ORUwgRk9SIFRISVMgVVNFUlxuICBjb25zdCBjYWNoZWRDaGFubmVsSWQgPSBkbUNoYW5uZWxJZHMuZ2V0KHVzZXJJZCk7XG4gIC8vIElGIElEIElTIENBQ0hFRCBTRU5EIE1FU1NBR0UgRElSRUNUTFlcbiAgaWYgKGNhY2hlZENoYW5uZWxJZCkgcmV0dXJuIGJvdC5oZWxwZXJzLnNlbmRNZXNzYWdlKGNhY2hlZENoYW5uZWxJZCwgY29udGVudCk7XG5cbiAgLy8gQ1JFQVRFIEEgTkVXIERNIENIQU5ORUwgQU5EIFBMVUNLIElUUyBJRFxuICBjb25zdCBjaGFubmVsID0gKGF3YWl0IGJvdC5oZWxwZXJzLmdldERtQ2hhbm5lbCh1c2VySWQpKTtcblxuICAvLyBDQUNIRSBJVCBGT1IgRlVUVVJFIFJFUVVFU1RTXG4gIGRtQ2hhbm5lbElkcy5zZXQodXNlcklkLCBjaGFubmVsLmlkKTtcblxuICAvLyBDQUNIRSBDSEFOTkVMIElGIE5FRURFRFxuICByZXR1cm4gYm90LmhlbHBlcnMuc2VuZE1lc3NhZ2UoY2hhbm5lbC5pZCwgY29udGVudCk7XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IlNBQWMsVUFBVSxRQUF1QixZQUFZLENBQUM7QUFFNUQsbURBQW1ELENBQ25ELE9BQU8sTUFBTSxZQUFZLEdBQUcsSUFBSSxVQUFVLEVBQWtCLENBQUM7QUFFN0QseU5BQXlOLENBQ3pOLE9BQU8sZUFBZSxpQkFBaUIsQ0FDckMsR0FBUSxFQUNSLE1BQWMsRUFDZCxPQUErQixFQUMvQjtJQUNBLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFLE9BQU8sR0FBRztRQUFFLE9BQU87S0FBRSxDQUFDO0lBRXZELGdFQUFnRTtJQUNoRSxNQUFNLGVBQWUsR0FBRyxZQUFZLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxBQUFDO0lBQ2pELHdDQUF3QztJQUN4QyxJQUFJLGVBQWUsRUFBRSxPQUFPLEdBQUcsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLGVBQWUsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUU5RSwyQ0FBMkM7SUFDM0MsTUFBTSxPQUFPLEdBQUksTUFBTSxHQUFHLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQUFBQyxBQUFDO0lBRXpELCtCQUErQjtJQUMvQixZQUFZLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7SUFFckMsMEJBQTBCO0lBQzFCLE9BQU8sR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQztDQUNyRCJ9