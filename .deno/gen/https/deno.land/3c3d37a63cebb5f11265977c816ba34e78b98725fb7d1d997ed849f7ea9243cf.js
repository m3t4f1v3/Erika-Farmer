/** Edits command permissions for a specific command for your application in a guild. */ export async function editApplicationCommandPermissions(bot, guildId, commandId, /** Bearer token which has the `applications.commands.permissions.update` scope and also access to this guild.  */ bearerToken, options) {
    const result = await bot.rest.runMethod(bot.rest, "PUT", bot.constants.routes.COMMANDS_PERMISSION(bot.applicationId, guildId, commandId), {
        permissions: options
    }, {
        headers: {
            authorization: `Bearer ${bearerToken}`
        }
    });
    return bot.transformers.applicationCommandPermission(bot, result);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEJvdCB9IGZyb20gXCIuLi8uLi8uLi9ib3QudHNcIjtcbmltcG9ydCB7IERpc2NvcmRHdWlsZEFwcGxpY2F0aW9uQ29tbWFuZFBlcm1pc3Npb25zIH0gZnJvbSBcIi4uLy4uLy4uL3R5cGVzL2Rpc2NvcmQudHNcIjtcbmltcG9ydCB7IEFwcGxpY2F0aW9uQ29tbWFuZFBlcm1pc3Npb25UeXBlcyB9IGZyb20gXCIuLi8uLi8uLi90eXBlcy9zaGFyZWQudHNcIjtcblxuLyoqIEVkaXRzIGNvbW1hbmQgcGVybWlzc2lvbnMgZm9yIGEgc3BlY2lmaWMgY29tbWFuZCBmb3IgeW91ciBhcHBsaWNhdGlvbiBpbiBhIGd1aWxkLiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGVkaXRBcHBsaWNhdGlvbkNvbW1hbmRQZXJtaXNzaW9ucyhcbiAgYm90OiBCb3QsXG4gIGd1aWxkSWQ6IGJpZ2ludCxcbiAgY29tbWFuZElkOiBiaWdpbnQsXG4gIC8qKiBCZWFyZXIgdG9rZW4gd2hpY2ggaGFzIHRoZSBgYXBwbGljYXRpb25zLmNvbW1hbmRzLnBlcm1pc3Npb25zLnVwZGF0ZWAgc2NvcGUgYW5kIGFsc28gYWNjZXNzIHRvIHRoaXMgZ3VpbGQuICAqL1xuICBiZWFyZXJUb2tlbjogc3RyaW5nLFxuICBvcHRpb25zOiBBcHBsaWNhdGlvbkNvbW1hbmRQZXJtaXNzaW9uc1tdLFxuKSB7XG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGJvdC5yZXN0LnJ1bk1ldGhvZDxEaXNjb3JkR3VpbGRBcHBsaWNhdGlvbkNvbW1hbmRQZXJtaXNzaW9ucz4oXG4gICAgYm90LnJlc3QsXG4gICAgXCJQVVRcIixcbiAgICBib3QuY29uc3RhbnRzLnJvdXRlcy5DT01NQU5EU19QRVJNSVNTSU9OKGJvdC5hcHBsaWNhdGlvbklkLCBndWlsZElkLCBjb21tYW5kSWQpLFxuICAgIHtcbiAgICAgIHBlcm1pc3Npb25zOiBvcHRpb25zLFxuICAgIH0sXG4gICAge1xuICAgICAgaGVhZGVyczogeyBhdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YmVhcmVyVG9rZW59YCB9LFxuICAgIH0sXG4gICk7XG5cbiAgcmV0dXJuIGJvdC50cmFuc2Zvcm1lcnMuYXBwbGljYXRpb25Db21tYW5kUGVybWlzc2lvbihib3QsIHJlc3VsdCk7XG59XG5cbi8qKiBodHRwczovL2Rpc2NvcmQuY29tL2RldmVsb3BlcnMvZG9jcy9pbnRlcmFjdGlvbnMvYXBwbGljYXRpb24tY29tbWFuZHMjZWRpdC1hcHBsaWNhdGlvbi1jb21tYW5kLXBlcm1pc3Npb25zICovXG5leHBvcnQgaW50ZXJmYWNlIEFwcGxpY2F0aW9uQ29tbWFuZFBlcm1pc3Npb25zIHtcbiAgLyoqIFRoZSBpZCBvZiB0aGUgcm9sZSBvciB1c2VyICovXG4gIGlkOiBzdHJpbmc7XG4gIC8qKiBSb2xlIG9yIFVzZXIgKi9cbiAgdHlwZTogQXBwbGljYXRpb25Db21tYW5kUGVybWlzc2lvblR5cGVzO1xuICAvKiogYHRydWVgIHRvIGFsbG93LCBgZmFsc2VgLCB0byBkaXNhbGxvdyAqL1xuICBwZXJtaXNzaW9uOiBib29sZWFuO1xufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLHdGQUF3RixDQUN4RixPQUFPLGVBQWUsaUNBQWlDLENBQ3JELEdBQVEsRUFDUixPQUFlLEVBQ2YsU0FBaUIsRUFDakIsa0hBQWtILENBQ2xILFdBQW1CLEVBQ25CLE9BQXdDLEVBQ3hDO0lBQ0EsTUFBTSxNQUFNLEdBQUcsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FDckMsR0FBRyxDQUFDLElBQUksRUFDUixLQUFLLEVBQ0wsR0FBRyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxPQUFPLEVBQUUsU0FBUyxDQUFDLEVBQy9FO1FBQ0UsV0FBVyxFQUFFLE9BQU87S0FDckIsRUFDRDtRQUNFLE9BQU8sRUFBRTtZQUFFLGFBQWEsRUFBRSxDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQztTQUFFO0tBQ3BELENBQ0YsQUFBQztJQUVGLE9BQU8sR0FBRyxDQUFDLFlBQVksQ0FBQyw0QkFBNEIsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7Q0FDbkUifQ==