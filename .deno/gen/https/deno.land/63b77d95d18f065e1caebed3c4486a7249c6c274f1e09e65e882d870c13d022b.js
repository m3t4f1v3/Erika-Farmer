import { ToggleBitfield } from "./ToggleBitfield.ts";
export const VoiceStateToggle = {
    deaf: 1 << 0,
    mute: 1 << 1,
    selfDeaf: 1 << 2,
    selfMute: 1 << 3,
    selfStream: 1 << 4,
    selfVideo: 1 << 5,
    suppress: 1 << 6,
};
export class VoiceStateToggles extends ToggleBitfield {
    constructor(voice) {
        super();
        if (voice.deaf)
            this.add(VoiceStateToggle.deaf);
        if (voice.mute)
            this.add(VoiceStateToggle.mute);
        if (voice.self_deaf)
            this.add(VoiceStateToggle.selfDeaf);
        if (voice.self_mute)
            this.add(VoiceStateToggle.selfMute);
        if (voice.self_stream)
            this.add(VoiceStateToggle.selfStream);
        if (voice.self_video)
            this.add(VoiceStateToggle.selfVideo);
        if (voice.suppress)
            this.add(VoiceStateToggle.suppress);
    }
    get deaf() {
        return this.has("deaf");
    }
    get mute() {
        return this.has("mute");
    }
    get selfDeaf() {
        return this.has("selfDeaf");
    }
    get selfMute() {
        return this.has("selfMute");
    }
    get selfStream() {
        return this.has("selfStream");
    }
    get selfVideo() {
        return this.has("selfVideo");
    }
    get suppress() {
        return this.has("suppress");
    }
    has(permissions) {
        if (!Array.isArray(permissions))
            return super.contains(VoiceStateToggle[permissions]);
        return super.contains(permissions.reduce((a, b) => (a |= VoiceStateToggle[b]), 0));
    }
    list() {
        const json = {};
        for (const [key, value] of Object.entries(VoiceStateToggle)) {
            json[key] = super.contains(value);
        }
        return json;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidm9pY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ2b2ljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFckQsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUc7SUFFOUIsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDO0lBRVosSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDO0lBRVosUUFBUSxFQUFFLENBQUMsSUFBSSxDQUFDO0lBRWhCLFFBQVEsRUFBRSxDQUFDLElBQUksQ0FBQztJQUVoQixVQUFVLEVBQUUsQ0FBQyxJQUFJLENBQUM7SUFFbEIsU0FBUyxFQUFFLENBQUMsSUFBSSxDQUFDO0lBRWpCLFFBQVEsRUFBRSxDQUFDLElBQUksQ0FBQztDQUNqQixDQUFDO0FBRUYsTUFBTSxPQUFPLGlCQUFrQixTQUFRLGNBQWM7SUFDbkQsWUFBWSxLQUF3QjtRQUNsQyxLQUFLLEVBQUUsQ0FBQztRQUVSLElBQUksS0FBSyxDQUFDLElBQUk7WUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2hELElBQUksS0FBSyxDQUFDLElBQUk7WUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2hELElBQUksS0FBSyxDQUFDLFNBQVM7WUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3pELElBQUksS0FBSyxDQUFDLFNBQVM7WUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3pELElBQUksS0FBSyxDQUFDLFdBQVc7WUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzdELElBQUksS0FBSyxDQUFDLFVBQVU7WUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzNELElBQUksS0FBSyxDQUFDLFFBQVE7WUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFHRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUdELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBR0QsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFHRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUdELElBQUksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBR0QsSUFBSSxTQUFTO1FBQ1gsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFHRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUdELEdBQUcsQ0FBQyxXQUEwRDtRQUM1RCxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUM7WUFBRSxPQUFPLEtBQUssQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztRQUV0RixPQUFPLEtBQUssQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyRixDQUFDO0lBR0QsSUFBSTtRQUNGLE1BQU0sSUFBSSxHQUE0QixFQUFFLENBQUM7UUFDekMsS0FBSyxNQUFNLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtZQUMzRCxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNuQztRQUVELE9BQU8sSUFBNkMsQ0FBQztJQUN2RCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXNjb3JkVXNlciwgRGlzY29yZFZvaWNlU3RhdGUgfSBmcm9tIFwiLi4vLi4vdHlwZXMvZGlzY29yZC50c1wiO1xuaW1wb3J0IHsgVG9nZ2xlQml0ZmllbGQgfSBmcm9tIFwiLi9Ub2dnbGVCaXRmaWVsZC50c1wiO1xuXG5leHBvcnQgY29uc3QgVm9pY2VTdGF0ZVRvZ2dsZSA9IHtcbiAgLyoqIFdoZXRoZXIgdGhpcyB1c2VyIGlzIGRlYWZlbmVkIGJ5IHRoZSBzZXJ2ZXIgKi9cbiAgZGVhZjogMSA8PCAwLFxuICAvKiogV2hldGhlciB0aGlzIHVzZXIgaXMgbXV0ZWQgYnkgdGhlIHNlcnZlciAqL1xuICBtdXRlOiAxIDw8IDEsXG4gIC8qKiBXaGV0aGVyIHRoaXMgdXNlciBpcyBsb2NhbGx5IGRlYWZlbmVkICovXG4gIHNlbGZEZWFmOiAxIDw8IDIsXG4gIC8qKiBXaGV0aGVyIHRoaXMgdXNlciBpcyBsb2NhbGx5IG11dGVkICovXG4gIHNlbGZNdXRlOiAxIDw8IDMsXG4gIC8qKiBXaGV0aGVyIHRoaXMgdXNlciBpcyBzdHJlYW1pbmcgdXNpbmcgXCJHbyBMaXZlXCIgKi9cbiAgc2VsZlN0cmVhbTogMSA8PCA0LFxuICAvKiogV2hldGhlciB0aGlzIHVzZXIncyBjYW1lcmEgaXMgZW5hYmxlZCAqL1xuICBzZWxmVmlkZW86IDEgPDwgNSxcbiAgLyoqIFdoZXRoZXIgdGhpcyB1c2VyIGlzIG11dGVkIGJ5IHRoZSBjdXJyZW50IHVzZXIgKi9cbiAgc3VwcHJlc3M6IDEgPDwgNixcbn07XG5cbmV4cG9ydCBjbGFzcyBWb2ljZVN0YXRlVG9nZ2xlcyBleHRlbmRzIFRvZ2dsZUJpdGZpZWxkIHtcbiAgY29uc3RydWN0b3Iodm9pY2U6IERpc2NvcmRWb2ljZVN0YXRlKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIGlmICh2b2ljZS5kZWFmKSB0aGlzLmFkZChWb2ljZVN0YXRlVG9nZ2xlLmRlYWYpO1xuICAgIGlmICh2b2ljZS5tdXRlKSB0aGlzLmFkZChWb2ljZVN0YXRlVG9nZ2xlLm11dGUpO1xuICAgIGlmICh2b2ljZS5zZWxmX2RlYWYpIHRoaXMuYWRkKFZvaWNlU3RhdGVUb2dnbGUuc2VsZkRlYWYpO1xuICAgIGlmICh2b2ljZS5zZWxmX211dGUpIHRoaXMuYWRkKFZvaWNlU3RhdGVUb2dnbGUuc2VsZk11dGUpO1xuICAgIGlmICh2b2ljZS5zZWxmX3N0cmVhbSkgdGhpcy5hZGQoVm9pY2VTdGF0ZVRvZ2dsZS5zZWxmU3RyZWFtKTtcbiAgICBpZiAodm9pY2Uuc2VsZl92aWRlbykgdGhpcy5hZGQoVm9pY2VTdGF0ZVRvZ2dsZS5zZWxmVmlkZW8pO1xuICAgIGlmICh2b2ljZS5zdXBwcmVzcykgdGhpcy5hZGQoVm9pY2VTdGF0ZVRvZ2dsZS5zdXBwcmVzcyk7XG4gIH1cblxuICAvKiogV2hldGhlciB0aGlzIHVzZXIgaXMgZGVhZmVuZWQgYnkgdGhlIHNlcnZlciAqL1xuICBnZXQgZGVhZigpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJkZWFmXCIpO1xuICB9XG5cbiAgLyoqIFdoZXRoZXIgdGhpcyB1c2VyIGlzIG11dGVkIGJ5IHRoZSBzZXJ2ZXIgKi9cbiAgZ2V0IG11dGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzKFwibXV0ZVwiKTtcbiAgfVxuXG4gIC8qKiBXaGV0aGVyIHRoaXMgdXNlciBpcyBsb2NhbGx5IGRlYWZlbmVkICovXG4gIGdldCBzZWxmRGVhZigpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJzZWxmRGVhZlwiKTtcbiAgfVxuXG4gIC8qKiBXaGV0aGVyIHRoaXMgdXNlciBpcyBsb2NhbGx5IG11dGVkICovXG4gIGdldCBzZWxmTXV0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJzZWxmTXV0ZVwiKTtcbiAgfVxuXG4gIC8qKiBXaGV0aGVyIHRoaXMgdXNlciBpcyBzdHJlYW1pbmcgdXNpbmcgXCJHbyBMaXZlXCIgKi9cbiAgZ2V0IHNlbGZTdHJlYW0oKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzKFwic2VsZlN0cmVhbVwiKTtcbiAgfVxuXG4gIC8qKiBXaGV0aGVyIHRoaXMgdXNlcidzIGNhbWVyYSBpcyBlbmFibGVkICovXG4gIGdldCBzZWxmVmlkZW8oKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzKFwic2VsZlZpZGVvXCIpO1xuICB9XG5cbiAgLyoqIFdoZXRoZXIgdGhpcyB1c2VyIGlzIG11dGVkIGJ5IHRoZSBjdXJyZW50IHVzZXIgKi9cbiAgZ2V0IHN1cHByZXNzKCkge1xuICAgIHJldHVybiB0aGlzLmhhcyhcInN1cHByZXNzXCIpO1xuICB9XG5cbiAgLyoqIENoZWNrcyB3aGV0aGVyIG9yIG5vdCB0aGUgcGVybWlzc2lvbnMgZXhpc3QgaW4gdGhpcyAqL1xuICBoYXMocGVybWlzc2lvbnM6IFZvaWNlU3RhdGVUb2dnbGVLZXlzIHwgVm9pY2VTdGF0ZVRvZ2dsZUtleXNbXSkge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShwZXJtaXNzaW9ucykpIHJldHVybiBzdXBlci5jb250YWlucyhWb2ljZVN0YXRlVG9nZ2xlW3Blcm1pc3Npb25zXSk7XG5cbiAgICByZXR1cm4gc3VwZXIuY29udGFpbnMocGVybWlzc2lvbnMucmVkdWNlKChhLCBiKSA9PiAoYSB8PSBWb2ljZVN0YXRlVG9nZ2xlW2JdKSwgMCkpO1xuICB9XG5cbiAgLyoqIExpc3RzIGFsbCB0aGUgdG9nZ2xlcyBmb3IgdGhlIHJvbGUgYW5kIHdoZXRoZXIgb3Igbm90IGVhY2ggaXMgdHJ1ZSBvciBmYWxzZS4gKi9cbiAgbGlzdCgpIHtcbiAgICBjb25zdCBqc29uOiBSZWNvcmQ8c3RyaW5nLCBib29sZWFuPiA9IHt9O1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKFZvaWNlU3RhdGVUb2dnbGUpKSB7XG4gICAgICBqc29uW2tleV0gPSBzdXBlci5jb250YWlucyh2YWx1ZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGpzb24gYXMgUmVjb3JkPFZvaWNlU3RhdGVUb2dnbGVLZXlzLCBib29sZWFuPjtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBWb2ljZVN0YXRlVG9nZ2xlS2V5cyA9IGtleW9mIHR5cGVvZiBWb2ljZVN0YXRlVG9nZ2xlO1xuIl19