import { BASE_URL } from "../util/constants.ts";
/** Processes a request and assigns it to a queue or creates a queue if none exists for it. */ export function processRequest(rest, request, payload) {
    const route = request.url.substring(request.url.indexOf("api/"));
    const parts = route.split("/");
    // REMOVE THE API
    parts.shift();
    // REMOVES THE VERSION NUMBER
    if (parts[0]?.startsWith("v")) parts.shift();
    // SET THE NEW REQUEST URL
    request.url = `${BASE_URL}/v${rest.version}/${parts.join("/")}`;
    // REMOVE THE MAJOR PARAM
    parts.shift();
    const url = rest.simplifyUrl(request.url, request.method);
    const queue = rest.pathQueues.get(url);
    if (queue) {
        queue.requests.push({
            request,
            payload
        });
    } else {
        // CREATES A NEW QUEUE
        rest.pathQueues.set(url, {
            isWaiting: false,
            requests: [
                {
                    request,
                    payload
                }, 
            ]
        });
        rest.processQueue(rest, url);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXN0TWFuYWdlciB9IGZyb20gXCIuLi9ib3QudHNcIjtcbmltcG9ydCB7IEJBU0VfVVJMIH0gZnJvbSBcIi4uL3V0aWwvY29uc3RhbnRzLnRzXCI7XG5pbXBvcnQgeyBSZXN0UGF5bG9hZCwgUmVzdFJlcXVlc3QgfSBmcm9tIFwiLi9yZXN0LnRzXCI7XG5cbi8qKiBQcm9jZXNzZXMgYSByZXF1ZXN0IGFuZCBhc3NpZ25zIGl0IHRvIGEgcXVldWUgb3IgY3JlYXRlcyBhIHF1ZXVlIGlmIG5vbmUgZXhpc3RzIGZvciBpdC4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzUmVxdWVzdChyZXN0OiBSZXN0TWFuYWdlciwgcmVxdWVzdDogUmVzdFJlcXVlc3QsIHBheWxvYWQ6IFJlc3RQYXlsb2FkKSB7XG4gIGNvbnN0IHJvdXRlID0gcmVxdWVzdC51cmwuc3Vic3RyaW5nKHJlcXVlc3QudXJsLmluZGV4T2YoXCJhcGkvXCIpKTtcbiAgY29uc3QgcGFydHMgPSByb3V0ZS5zcGxpdChcIi9cIik7XG4gIC8vIFJFTU9WRSBUSEUgQVBJXG4gIHBhcnRzLnNoaWZ0KCk7XG4gIC8vIFJFTU9WRVMgVEhFIFZFUlNJT04gTlVNQkVSXG4gIGlmIChwYXJ0c1swXT8uc3RhcnRzV2l0aChcInZcIikpIHBhcnRzLnNoaWZ0KCk7XG4gIC8vIFNFVCBUSEUgTkVXIFJFUVVFU1QgVVJMXG4gIHJlcXVlc3QudXJsID0gYCR7QkFTRV9VUkx9L3Yke3Jlc3QudmVyc2lvbn0vJHtwYXJ0cy5qb2luKFwiL1wiKX1gO1xuICAvLyBSRU1PVkUgVEhFIE1BSk9SIFBBUkFNXG4gIHBhcnRzLnNoaWZ0KCk7XG5cbiAgY29uc3QgdXJsID0gcmVzdC5zaW1wbGlmeVVybChyZXF1ZXN0LnVybCwgcmVxdWVzdC5tZXRob2QpO1xuXG4gIGNvbnN0IHF1ZXVlID0gcmVzdC5wYXRoUXVldWVzLmdldCh1cmwpO1xuICBpZiAocXVldWUpIHtcbiAgICBxdWV1ZS5yZXF1ZXN0cy5wdXNoKHsgcmVxdWVzdCwgcGF5bG9hZCB9KTtcbiAgfSBlbHNlIHtcbiAgICAvLyBDUkVBVEVTIEEgTkVXIFFVRVVFXG4gICAgcmVzdC5wYXRoUXVldWVzLnNldCh1cmwsIHtcbiAgICAgIGlzV2FpdGluZzogZmFsc2UsXG4gICAgICByZXF1ZXN0czogW1xuICAgICAgICB7XG4gICAgICAgICAgcmVxdWVzdCxcbiAgICAgICAgICBwYXlsb2FkLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9KTtcbiAgICByZXN0LnByb2Nlc3NRdWV1ZShyZXN0LCB1cmwpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsU0FBUyxRQUFRLFFBQVEsc0JBQXNCLENBQUM7QUFHaEQsOEZBQThGLENBQzlGLE9BQU8sU0FBUyxjQUFjLENBQUMsSUFBaUIsRUFBRSxPQUFvQixFQUFFLE9BQW9CLEVBQUU7SUFDNUYsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQUFBQztJQUNqRSxNQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxBQUFDO0lBQy9CLGlCQUFpQjtJQUNqQixLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDZCw2QkFBNkI7SUFDN0IsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUM3QywwQkFBMEI7SUFDMUIsT0FBTyxDQUFDLEdBQUcsR0FBRyxDQUFDLEVBQUUsUUFBUSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNoRSx5QkFBeUI7SUFDekIsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBRWQsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsQUFBQztJQUUxRCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQUFBQztJQUN2QyxJQUFJLEtBQUssRUFBRTtRQUNULEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDO1lBQUUsT0FBTztZQUFFLE9BQU87U0FBRSxDQUFDLENBQUM7S0FDM0MsTUFBTTtRQUNMLHNCQUFzQjtRQUN0QixJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUU7WUFDdkIsU0FBUyxFQUFFLEtBQUs7WUFDaEIsUUFBUSxFQUFFO2dCQUNSO29CQUNFLE9BQU87b0JBQ1AsT0FBTztpQkFDUjthQUNGO1NBQ0YsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7S0FDOUI7Q0FDRiJ9