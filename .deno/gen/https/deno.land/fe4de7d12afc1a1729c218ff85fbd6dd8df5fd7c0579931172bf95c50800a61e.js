export async function getInvite(bot, inviteCode, options) {
    const result = await bot.rest.runMethod(bot.rest, "GET", bot.constants.routes.INVITE(inviteCode, options));
    return {
        code: result.code,
        guildId: result.guild?.id ? bot.transformers.snowflake(result.guild.id) : undefined,
        channelId: result.channel?.id ? bot.transformers.snowflake(result.channel.id) : undefined,
        inviter: result.inviter ? bot.transformers.user(bot, result.inviter) : undefined,
        targetType: result.target_type,
        targetUser: result.target_user ? bot.transformers.user(bot, result.target_user) : undefined,
        targetApplicationId: result.target_application?.id
            ? bot.transformers.snowflake(result.target_application.id)
            : undefined,
        approximatePresenceCount: result.approximate_presence_count,
        approximateMemberCount: result.approximate_member_count,
        expiresAt: result.expires_at ? Date.parse(result.expires_at) : undefined,
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0SW52aXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZ2V0SW52aXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE1BQU0sQ0FBQyxLQUFLLFVBQVUsU0FBUyxDQUFDLEdBQVEsRUFBRSxVQUFrQixFQUFFLE9BQW1CO0lBQy9FLE1BQU0sTUFBTSxHQUFHLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQ3JDLEdBQUcsQ0FBQyxJQUFJLEVBQ1IsS0FBSyxFQUNMLEdBQUcsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQ2pELENBQUM7SUFFRixPQUFPO1FBQ0wsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJO1FBQ2pCLE9BQU8sRUFBRSxNQUFNLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUztRQUNuRixTQUFTLEVBQUUsTUFBTSxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDekYsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDaEYsVUFBVSxFQUFFLE1BQU0sQ0FBQyxXQUFXO1FBQzlCLFVBQVUsRUFBRSxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQzNGLG1CQUFtQixFQUFFLE1BQU0sQ0FBQyxrQkFBa0IsRUFBRSxFQUFFO1lBQ2hELENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDO1lBQzFELENBQUMsQ0FBQyxTQUFTO1FBQ2Isd0JBQXdCLEVBQUUsTUFBTSxDQUFDLDBCQUEwQjtRQUMzRCxzQkFBc0IsRUFBRSxNQUFNLENBQUMsd0JBQXdCO1FBQ3ZELFNBQVMsRUFBRSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUztLQUN6RSxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgQm90IH0gZnJvbSBcIi4uLy4uL2JvdC50c1wiO1xuaW1wb3J0IHsgRGlzY29yZEludml0ZU1ldGFkYXRhIH0gZnJvbSBcIi4uLy4uL3R5cGVzL2Rpc2NvcmQudHNcIjtcblxuLyoqIFJldHVybnMgYW4gaW52aXRlIGZvciB0aGUgZ2l2ZW4gY29kZSBvciB0aHJvd3MgYW4gZXJyb3IgaWYgdGhlIGludml0ZSBkb2Vzbid0IGV4aXN0cy4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRJbnZpdGUoYm90OiBCb3QsIGludml0ZUNvZGU6IHN0cmluZywgb3B0aW9ucz86IEdldEludml0ZSkge1xuICBjb25zdCByZXN1bHQgPSBhd2FpdCBib3QucmVzdC5ydW5NZXRob2Q8RGlzY29yZEludml0ZU1ldGFkYXRhPihcbiAgICBib3QucmVzdCxcbiAgICBcIkdFVFwiLFxuICAgIGJvdC5jb25zdGFudHMucm91dGVzLklOVklURShpbnZpdGVDb2RlLCBvcHRpb25zKSxcbiAgKTtcblxuICByZXR1cm4ge1xuICAgIGNvZGU6IHJlc3VsdC5jb2RlLFxuICAgIGd1aWxkSWQ6IHJlc3VsdC5ndWlsZD8uaWQgPyBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShyZXN1bHQuZ3VpbGQuaWQpIDogdW5kZWZpbmVkLFxuICAgIGNoYW5uZWxJZDogcmVzdWx0LmNoYW5uZWw/LmlkID8gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocmVzdWx0LmNoYW5uZWwuaWQpIDogdW5kZWZpbmVkLFxuICAgIGludml0ZXI6IHJlc3VsdC5pbnZpdGVyID8gYm90LnRyYW5zZm9ybWVycy51c2VyKGJvdCwgcmVzdWx0Lmludml0ZXIpIDogdW5kZWZpbmVkLFxuICAgIHRhcmdldFR5cGU6IHJlc3VsdC50YXJnZXRfdHlwZSxcbiAgICB0YXJnZXRVc2VyOiByZXN1bHQudGFyZ2V0X3VzZXIgPyBib3QudHJhbnNmb3JtZXJzLnVzZXIoYm90LCByZXN1bHQudGFyZ2V0X3VzZXIpIDogdW5kZWZpbmVkLFxuICAgIHRhcmdldEFwcGxpY2F0aW9uSWQ6IHJlc3VsdC50YXJnZXRfYXBwbGljYXRpb24/LmlkXG4gICAgICA/IGJvdC50cmFuc2Zvcm1lcnMuc25vd2ZsYWtlKHJlc3VsdC50YXJnZXRfYXBwbGljYXRpb24uaWQpXG4gICAgICA6IHVuZGVmaW5lZCxcbiAgICBhcHByb3hpbWF0ZVByZXNlbmNlQ291bnQ6IHJlc3VsdC5hcHByb3hpbWF0ZV9wcmVzZW5jZV9jb3VudCxcbiAgICBhcHByb3hpbWF0ZU1lbWJlckNvdW50OiByZXN1bHQuYXBwcm94aW1hdGVfbWVtYmVyX2NvdW50LFxuICAgIGV4cGlyZXNBdDogcmVzdWx0LmV4cGlyZXNfYXQgPyBEYXRlLnBhcnNlKHJlc3VsdC5leHBpcmVzX2F0KSA6IHVuZGVmaW5lZCxcbiAgfTtcbn1cblxuLyoqIGh0dHBzOi8vZGlzY29yZC5jb20vZGV2ZWxvcGVycy9kb2NzL3Jlc291cmNlcy9pbnZpdGUjZ2V0LWludml0ZSAqL1xuZXhwb3J0IGludGVyZmFjZSBHZXRJbnZpdGUge1xuICAvKiogV2hldGhlciB0aGUgaW52aXRlIHNob3VsZCBjb250YWluIGFwcHJveGltYXRlIG1lbWJlciBjb3VudHMgKi9cbiAgd2l0aENvdW50cz86IGJvb2xlYW47XG4gIC8qKiBXaGV0aGVyIHRoZSBpbnZpdGUgc2hvdWxkIGNvbnRhaW4gdGhlIGV4cGlyYXRpb24gZGF0ZSAqL1xuICB3aXRoRXhwaXJhdGlvbj86IGJvb2xlYW47XG4gIC8qKiB0aGUgZ3VpbGQgc2NoZWR1bGVkIGV2ZW50IHRvIGluY2x1ZGUgd2l0aCB0aGUgaW52aXRlICovXG4gIHNjaGVkdWxlZEV2ZW50SWQ/OiBiaWdpbnQ7XG59XG4iXX0=