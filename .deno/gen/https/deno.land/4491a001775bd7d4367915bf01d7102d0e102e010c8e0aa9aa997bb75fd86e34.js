import { Collection } from "../../util/collection.ts";
// TODO: make options optional
/**
 * Highly recommended to **NOT** use this function to get members instead use fetchMembers().
 * REST(this function): 50/s global(across all shards) rate limit with ALL requests this included
 * GW(fetchMembers): 120/m(PER shard) rate limit. Meaning if you have 8 shards your limit is 960/m.
 */ export async function getMembers(bot, guildId, options) {
    const result = await bot.rest.runMethod(bot.rest, "GET", bot.constants.routes.GUILD_MEMBERS(guildId, options));
    return new Collection(result.map((res)=>{
        const member = bot.transformers.member(bot, res, guildId, bot.transformers.snowflake(res.user.id));
        return [
            member.id,
            member
        ];
    }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEJvdCB9IGZyb20gXCIuLi8uLi9ib3QudHNcIjtcbmltcG9ydCB7IERpc2NvcmRNZW1iZXJXaXRoVXNlciB9IGZyb20gXCIuLi8uLi90eXBlcy9kaXNjb3JkLnRzXCI7XG5pbXBvcnQgeyBDb2xsZWN0aW9uIH0gZnJvbSBcIi4uLy4uL3V0aWwvY29sbGVjdGlvbi50c1wiO1xuXG4vLyBUT0RPOiBtYWtlIG9wdGlvbnMgb3B0aW9uYWxcbi8qKlxuICogSGlnaGx5IHJlY29tbWVuZGVkIHRvICoqTk9UKiogdXNlIHRoaXMgZnVuY3Rpb24gdG8gZ2V0IG1lbWJlcnMgaW5zdGVhZCB1c2UgZmV0Y2hNZW1iZXJzKCkuXG4gKiBSRVNUKHRoaXMgZnVuY3Rpb24pOiA1MC9zIGdsb2JhbChhY3Jvc3MgYWxsIHNoYXJkcykgcmF0ZSBsaW1pdCB3aXRoIEFMTCByZXF1ZXN0cyB0aGlzIGluY2x1ZGVkXG4gKiBHVyhmZXRjaE1lbWJlcnMpOiAxMjAvbShQRVIgc2hhcmQpIHJhdGUgbGltaXQuIE1lYW5pbmcgaWYgeW91IGhhdmUgOCBzaGFyZHMgeW91ciBsaW1pdCBpcyA5NjAvbS5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1lbWJlcnMoYm90OiBCb3QsIGd1aWxkSWQ6IGJpZ2ludCwgb3B0aW9uczogTGlzdEd1aWxkTWVtYmVycykge1xuICBjb25zdCByZXN1bHQgPSBhd2FpdCBib3QucmVzdC5ydW5NZXRob2Q8RGlzY29yZE1lbWJlcldpdGhVc2VyW10+KFxuICAgIGJvdC5yZXN0LFxuICAgIFwiR0VUXCIsXG4gICAgYm90LmNvbnN0YW50cy5yb3V0ZXMuR1VJTERfTUVNQkVSUyhndWlsZElkLCBvcHRpb25zKSxcbiAgKTtcblxuICByZXR1cm4gbmV3IENvbGxlY3Rpb24oXG4gICAgcmVzdWx0Lm1hcCgocmVzKSA9PiB7XG4gICAgICBjb25zdCBtZW1iZXIgPSBib3QudHJhbnNmb3JtZXJzLm1lbWJlcihib3QsIHJlcywgZ3VpbGRJZCwgYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocmVzLnVzZXIuaWQpKTtcbiAgICAgIHJldHVybiBbbWVtYmVyLmlkLCBtZW1iZXJdO1xuICAgIH0pLFxuICApO1xufVxuXG4vKiogaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzL2RvY3MvcmVzb3VyY2VzL2d1aWxkI2xpc3QtZ3VpbGQtbWVtYmVycyAqL1xuZXhwb3J0IGludGVyZmFjZSBMaXN0R3VpbGRNZW1iZXJzIHtcbiAgLyoqIE1heCBudW1iZXIgb2YgbWVtYmVycyB0byByZXR1cm4gKDEtMTAwMCkuIERlZmF1bHQ6IDEwMDAgKi9cbiAgbGltaXQ/OiBudW1iZXI7XG4gIC8qKiBUaGUgaGlnaGVzdCB1c2VyIGlkIGluIHRoZSBwcmV2aW91cyBwYWdlLiBEZWZhdWx0OiAwICovXG4gIGFmdGVyPzogc3RyaW5nO1xufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLFNBQVMsVUFBVSxRQUFRLDBCQUEwQixDQUFDO0FBRXRELDhCQUE4QjtBQUM5Qjs7OztHQUlHLENBQ0gsT0FBTyxlQUFlLFVBQVUsQ0FBQyxHQUFRLEVBQUUsT0FBZSxFQUFFLE9BQXlCLEVBQUU7SUFDckYsTUFBTSxNQUFNLEdBQUcsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FDckMsR0FBRyxDQUFDLElBQUksRUFDUixLQUFLLEVBQ0wsR0FBRyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FDckQsQUFBQztJQUVGLE9BQU8sSUFBSSxVQUFVLENBQ25CLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUs7UUFDbEIsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsR0FBRyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxBQUFDO1FBQ25HLE9BQU87WUFBQyxNQUFNLENBQUMsRUFBRTtZQUFFLE1BQU07U0FBQyxDQUFDO0tBQzVCLENBQUMsQ0FDSCxDQUFDO0NBQ0gifQ==