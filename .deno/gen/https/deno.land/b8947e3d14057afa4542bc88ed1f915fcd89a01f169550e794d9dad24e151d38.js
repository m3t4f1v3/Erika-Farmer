import { GatewayOpcodes } from "../../types/shared.ts";
import { ShardSocketCloseCodes, ShardState } from "./types.ts";
export function startHeartbeating(shard, interval) {
    shard.heart.interval = interval;
    if ([ShardState.Disconnected, ShardState.Offline].includes(shard.state)) {
        shard.state = ShardState.Unidentified;
    }
    const jitter = Math.ceil(shard.heart.interval * (Math.random() || 0.5));
    shard.heart.timeoutId = setTimeout(() => {
        shard.socket?.send(JSON.stringify({
            op: GatewayOpcodes.Heartbeat,
            d: shard.previousSequenceNumber,
        }));
        shard.heart.lastBeat = Date.now();
        shard.heart.acknowledged = false;
        shard.heart.intervalId = setInterval(async () => {
            if (!shard.heart.acknowledged) {
                shard.close(ShardSocketCloseCodes.ZombiedConnection, "Zombied connection, did not receive an heartbeat ACK in time.");
                return await shard.identify();
            }
            shard.heart.acknowledged = false;
            shard.socket?.send(JSON.stringify({
                op: GatewayOpcodes.Heartbeat,
                d: shard.previousSequenceNumber,
            }));
            shard.heart.lastBeat = Date.now();
            shard.events.heartbeat?.(shard);
        }, shard.heart.interval);
    }, jitter);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnRIZWFydGJlYXRpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzdGFydEhlYXJ0YmVhdGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdkQsT0FBTyxFQUFTLHFCQUFxQixFQUFFLFVBQVUsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUV0RSxNQUFNLFVBQVUsaUJBQWlCLENBQUMsS0FBWSxFQUFFLFFBQWdCO0lBRzlELEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUloQyxJQUFJLENBQUMsVUFBVSxDQUFDLFlBQVksRUFBRSxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUN2RSxLQUFLLENBQUMsS0FBSyxHQUFHLFVBQVUsQ0FBQyxZQUFZLENBQUM7S0FDdkM7SUFNRCxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDeEUsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsVUFBVSxDQUFDLEdBQUcsRUFBRTtRQUV0QyxLQUFLLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ2hDLEVBQUUsRUFBRSxjQUFjLENBQUMsU0FBUztZQUM1QixDQUFDLEVBQUUsS0FBSyxDQUFDLHNCQUFzQjtTQUNoQyxDQUFDLENBQUMsQ0FBQztRQUVKLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNsQyxLQUFLLENBQUMsS0FBSyxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7UUFHakMsS0FBSyxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsV0FBVyxDQUFDLEtBQUssSUFBSSxFQUFFO1lBUzlDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLFlBQVksRUFBRTtnQkFDN0IsS0FBSyxDQUFDLEtBQUssQ0FDVCxxQkFBcUIsQ0FBQyxpQkFBaUIsRUFDdkMsK0RBQStELENBQ2hFLENBQUM7Z0JBRUYsT0FBTyxNQUFNLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQzthQUMvQjtZQUVELEtBQUssQ0FBQyxLQUFLLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztZQUdqQyxLQUFLLENBQUMsTUFBTSxFQUFFLElBQUksQ0FDaEIsSUFBSSxDQUFDLFNBQVMsQ0FBQztnQkFDYixFQUFFLEVBQUUsY0FBYyxDQUFDLFNBQVM7Z0JBQzVCLENBQUMsRUFBRSxLQUFLLENBQUMsc0JBQXNCO2FBQ2hDLENBQUMsQ0FDSCxDQUFDO1lBRUYsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBRWxDLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbEMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDM0IsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdhdGV3YXlPcGNvZGVzIH0gZnJvbSBcIi4uLy4uL3R5cGVzL3NoYXJlZC50c1wiO1xuaW1wb3J0IHsgU2hhcmQsIFNoYXJkU29ja2V0Q2xvc2VDb2RlcywgU2hhcmRTdGF0ZSB9IGZyb20gXCIuL3R5cGVzLnRzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGFydEhlYXJ0YmVhdGluZyhzaGFyZDogU2hhcmQsIGludGVydmFsOiBudW1iZXIpIHtcbiAgLy8gICBnYXRld2F5LmRlYnVnKFwiR1cgSEVBUlRCRUFUSU5HX1NUQVJURURcIiwgeyBzaGFyZElkLCBpbnRlcnZhbCB9KTtcblxuICBzaGFyZC5oZWFydC5pbnRlcnZhbCA9IGludGVydmFsO1xuXG4gIC8vIE9ubHkgc2V0IHRoZSBzaGFyZCdzIHN0YXRlIHRvIGBVbmlkZW50aWZpZWRgXG4gIC8vIGlmIGhlYXJ0YmVhdGluZyBoYXMgbm90IGJlZW4gc3RhcnRlZCBkdWUgdG8gYW4gaWRlbnRpZnkgb3IgcmVzdW1lIGFjdGlvbi5cbiAgaWYgKFtTaGFyZFN0YXRlLkRpc2Nvbm5lY3RlZCwgU2hhcmRTdGF0ZS5PZmZsaW5lXS5pbmNsdWRlcyhzaGFyZC5zdGF0ZSkpIHtcbiAgICBzaGFyZC5zdGF0ZSA9IFNoYXJkU3RhdGUuVW5pZGVudGlmaWVkO1xuICB9XG5cbiAgLy8gVGhlIGZpcnN0IGhlYXJ0YmVhdCBuZWVkcyB0byBiZSBzZW5kIHdpdGggYSByYW5kb20gZGVsYXkgYmV0d2VlbiBgMGAgYW5kIGBpbnRlcnZhbGBcbiAgLy8gVXNpbmcgYSBgc2V0VGltZW91dChfLCBqaXR0ZXIpYCBoZXJlIHRvIGFjY29tcGxpc2ggdGhhdC5cbiAgLy8gYE1hdGgucmFuZG9tKClgIGNhbiBiZSBgMGAgc28gd2UgdXNlIGAwLjVgIGlmIHRoaXMgaGFwcGVuc1xuICAvLyBSZWZlcmVuY2U6IGh0dHBzOi8vZGlzY29yZC5jb20vZGV2ZWxvcGVycy9kb2NzL3RvcGljcy9nYXRld2F5I2hlYXJ0YmVhdGluZ1xuICBjb25zdCBqaXR0ZXIgPSBNYXRoLmNlaWwoc2hhcmQuaGVhcnQuaW50ZXJ2YWwgKiAoTWF0aC5yYW5kb20oKSB8fCAwLjUpKTtcbiAgc2hhcmQuaGVhcnQudGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgLy8gVXNpbmcgYSBkaXJlY3Qgc29ja2V0LnNlbmQgY2FsbCBoZXJlIGJlY2F1c2UgaGVhcnRiZWF0IHJlcXVlc3RzIGFyZSByZXNlcnZlZCBieSB1cy5cbiAgICBzaGFyZC5zb2NrZXQ/LnNlbmQoSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgb3A6IEdhdGV3YXlPcGNvZGVzLkhlYXJ0YmVhdCxcbiAgICAgIGQ6IHNoYXJkLnByZXZpb3VzU2VxdWVuY2VOdW1iZXIsXG4gICAgfSkpO1xuXG4gICAgc2hhcmQuaGVhcnQubGFzdEJlYXQgPSBEYXRlLm5vdygpO1xuICAgIHNoYXJkLmhlYXJ0LmFja25vd2xlZGdlZCA9IGZhbHNlO1xuXG4gICAgLy8gQWZ0ZXIgdGhlIHJhbmRvbSBoZWFydGJlYXQgaml0dGVyIHdlIGNhbiBzdGFydCBhIG5vcm1hbCBpbnRlcnZhbC5cbiAgICBzaGFyZC5oZWFydC5pbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoYXN5bmMgKCkgPT4ge1xuICAgICAgLy8gZ2F0ZXdheS5kZWJ1ZyhcIkdXIERFQlVHXCIsIGBSdW5uaW5nIHNldEludGVydmFsIGluIGhlYXJ0YmVhdCBmaWxlLiBTaGFyZDogJHtzaGFyZElkfWApO1xuXG4gICAgICAvLyBnYXRld2F5LmRlYnVnKFwiR1cgSEVBUlRCRUFUSU5HXCIsIHsgc2hhcmRJZCwgc2hhcmQ6IGN1cnJlbnRTaGFyZCB9KTtcblxuICAgICAgLy8gVGhlIFNoYXJkIGRpZCBub3QgcmVjZWl2ZSBhIGhlYXJ0YmVhdCBBQ0sgZnJvbSBEaXNjb3JkIGluIHRpbWUsXG4gICAgICAvLyB0aGVyZWZvcmUgd2UgaGF2ZSB0byBhc3N1bWUgdGhhdCB0aGUgY29ubmVjdGlvbiBoYXMgZmFpbGVkIG9yIGdvdCBcInpvbWJpZWRcIi5cbiAgICAgIC8vIFRoZSBTaGFyZCBuZWVkcyB0byBzdGFydCBhIHJlLWlkZW50aWZ5IGFjdGlvbiBhY2NvcmRpbmdseS5cbiAgICAgIC8vIFJlZmVyZW5jZTogaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzL2RvY3MvdG9waWNzL2dhdGV3YXkjaGVhcnRiZWF0aW5nLWV4YW1wbGUtZ2F0ZXdheS1oZWFydGJlYXQtYWNrXG4gICAgICBpZiAoIXNoYXJkLmhlYXJ0LmFja25vd2xlZGdlZCkge1xuICAgICAgICBzaGFyZC5jbG9zZShcbiAgICAgICAgICBTaGFyZFNvY2tldENsb3NlQ29kZXMuWm9tYmllZENvbm5lY3Rpb24sXG4gICAgICAgICAgXCJab21iaWVkIGNvbm5lY3Rpb24sIGRpZCBub3QgcmVjZWl2ZSBhbiBoZWFydGJlYXQgQUNLIGluIHRpbWUuXCIsXG4gICAgICAgICk7XG5cbiAgICAgICAgcmV0dXJuIGF3YWl0IHNoYXJkLmlkZW50aWZ5KCk7XG4gICAgICB9XG5cbiAgICAgIHNoYXJkLmhlYXJ0LmFja25vd2xlZGdlZCA9IGZhbHNlO1xuXG4gICAgICAvLyBVc2luZyBhIGRpcmVjdCBzb2NrZXQuc2VuZCBjYWxsIGhlcmUgYmVjYXVzZSBoZWFydGJlYXQgcmVxdWVzdHMgYXJlIHJlc2VydmVkIGJ5IHVzLlxuICAgICAgc2hhcmQuc29ja2V0Py5zZW5kKFxuICAgICAgICBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgb3A6IEdhdGV3YXlPcGNvZGVzLkhlYXJ0YmVhdCxcbiAgICAgICAgICBkOiBzaGFyZC5wcmV2aW91c1NlcXVlbmNlTnVtYmVyLFxuICAgICAgICB9KSxcbiAgICAgICk7XG5cbiAgICAgIHNoYXJkLmhlYXJ0Lmxhc3RCZWF0ID0gRGF0ZS5ub3coKTtcblxuICAgICAgc2hhcmQuZXZlbnRzLmhlYXJ0YmVhdD8uKHNoYXJkKTtcbiAgICB9LCBzaGFyZC5oZWFydC5pbnRlcnZhbCk7XG4gIH0sIGppdHRlcik7XG59XG4iXX0=