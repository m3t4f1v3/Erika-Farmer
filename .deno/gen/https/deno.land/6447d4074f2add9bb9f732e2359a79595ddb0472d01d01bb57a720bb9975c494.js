import { requireBotChannelPermissions } from "./permissions.ts";
export function createInvite(bot) {
    const createInviteOld = bot.helpers.createInvite;
    bot.helpers.createInvite = async function (channelId, options = {}) {
        if (options.maxAge && (options.maxAge < 0 || options.maxAge > 604800)) {
            throw new Error("The max age for an invite must be between 0 and 604800.");
        }
        if (options.maxUses && (options.maxUses < 0 || options.maxUses > 100)) {
            throw new Error("The max uses for an invite must be between 0 and 100.");
        }
        requireBotChannelPermissions(bot, channelId, ["CREATE_INSTANT_INVITE"]);
        return await createInviteOld(channelId, options);
    };
}
export function getChannelInvites(bot) {
    const getChannelInvitesOld = bot.helpers.getChannelInvites;
    bot.helpers.getChannelInvites = async function (channelId) {
        requireBotChannelPermissions(bot, channelId, ["MANAGE_CHANNELS"]);
        return await getChannelInvitesOld(channelId);
    };
}
export function getInvites(bot) {
    const getInvitesOld = bot.helpers.getInvites;
    bot.helpers.getInvites = async function (guildId) {
        requireBotChannelPermissions(bot, guildId, ["MANAGE_GUILD"]);
        return await getInvitesOld(guildId);
    };
}
export default function setupInvitesPermChecks(bot) {
    createInvite(bot);
    getChannelInvites(bot);
    getInvites(bot);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52aXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludml0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEUsTUFBTSxVQUFVLFlBQVksQ0FBQyxHQUFpQjtJQUM1QyxNQUFNLGVBQWUsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQztJQUVqRCxHQUFHLENBQUMsT0FBTyxDQUFDLFlBQVksR0FBRyxLQUFLLFdBQVcsU0FBUyxFQUFFLE9BQU8sR0FBRyxFQUFFO1FBQ2hFLElBQUksT0FBTyxDQUFDLE1BQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLEVBQUU7WUFDckUsTUFBTSxJQUFJLEtBQUssQ0FDYix5REFBeUQsQ0FDMUQsQ0FBQztTQUNIO1FBQ0QsSUFBSSxPQUFPLENBQUMsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxDQUFDLElBQUksT0FBTyxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUMsRUFBRTtZQUNyRSxNQUFNLElBQUksS0FBSyxDQUFDLHVEQUF1RCxDQUFDLENBQUM7U0FDMUU7UUFFRCw0QkFBNEIsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDO1FBRXhFLE9BQU8sTUFBTSxlQUFlLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ25ELENBQUMsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLFVBQVUsaUJBQWlCLENBQUMsR0FBaUI7SUFDakQsTUFBTSxvQkFBb0IsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDO0lBRTNELEdBQUcsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxXQUFXLFNBQVM7UUFDdkQsNEJBQTRCLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztRQUVsRSxPQUFPLE1BQU0sb0JBQW9CLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDL0MsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sVUFBVSxVQUFVLENBQUMsR0FBaUI7SUFDMUMsTUFBTSxhQUFhLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUM7SUFFN0MsR0FBRyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEdBQUcsS0FBSyxXQUFXLE9BQU87UUFDOUMsNEJBQTRCLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7UUFFN0QsT0FBTyxNQUFNLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN0QyxDQUFDLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxDQUFDLE9BQU8sVUFBVSxzQkFBc0IsQ0FBQyxHQUFpQjtJQUM5RCxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEIsaUJBQWlCLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdkIsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb3RXaXRoQ2FjaGUgfSBmcm9tIFwiLi4vZGVwcy50c1wiO1xuaW1wb3J0IHsgcmVxdWlyZUJvdENoYW5uZWxQZXJtaXNzaW9ucyB9IGZyb20gXCIuL3Blcm1pc3Npb25zLnRzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbnZpdGUoYm90OiBCb3RXaXRoQ2FjaGUpIHtcbiAgY29uc3QgY3JlYXRlSW52aXRlT2xkID0gYm90LmhlbHBlcnMuY3JlYXRlSW52aXRlO1xuXG4gIGJvdC5oZWxwZXJzLmNyZWF0ZUludml0ZSA9IGFzeW5jIGZ1bmN0aW9uIChjaGFubmVsSWQsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChvcHRpb25zLm1heEFnZSAmJiAob3B0aW9ucy5tYXhBZ2UgPCAwIHx8IG9wdGlvbnMubWF4QWdlID4gNjA0ODAwKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIlRoZSBtYXggYWdlIGZvciBhbiBpbnZpdGUgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDYwNDgwMC5cIixcbiAgICAgICk7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLm1heFVzZXMgJiYgKG9wdGlvbnMubWF4VXNlcyA8IDAgfHwgb3B0aW9ucy5tYXhVc2VzID4gMTAwKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlIG1heCB1c2VzIGZvciBhbiBpbnZpdGUgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDEwMC5cIik7XG4gICAgfVxuXG4gICAgcmVxdWlyZUJvdENoYW5uZWxQZXJtaXNzaW9ucyhib3QsIGNoYW5uZWxJZCwgW1wiQ1JFQVRFX0lOU1RBTlRfSU5WSVRFXCJdKTtcblxuICAgIHJldHVybiBhd2FpdCBjcmVhdGVJbnZpdGVPbGQoY2hhbm5lbElkLCBvcHRpb25zKTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENoYW5uZWxJbnZpdGVzKGJvdDogQm90V2l0aENhY2hlKSB7XG4gIGNvbnN0IGdldENoYW5uZWxJbnZpdGVzT2xkID0gYm90LmhlbHBlcnMuZ2V0Q2hhbm5lbEludml0ZXM7XG5cbiAgYm90LmhlbHBlcnMuZ2V0Q2hhbm5lbEludml0ZXMgPSBhc3luYyBmdW5jdGlvbiAoY2hhbm5lbElkKSB7XG4gICAgcmVxdWlyZUJvdENoYW5uZWxQZXJtaXNzaW9ucyhib3QsIGNoYW5uZWxJZCwgW1wiTUFOQUdFX0NIQU5ORUxTXCJdKTtcblxuICAgIHJldHVybiBhd2FpdCBnZXRDaGFubmVsSW52aXRlc09sZChjaGFubmVsSWQpO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SW52aXRlcyhib3Q6IEJvdFdpdGhDYWNoZSkge1xuICBjb25zdCBnZXRJbnZpdGVzT2xkID0gYm90LmhlbHBlcnMuZ2V0SW52aXRlcztcblxuICBib3QuaGVscGVycy5nZXRJbnZpdGVzID0gYXN5bmMgZnVuY3Rpb24gKGd1aWxkSWQpIHtcbiAgICByZXF1aXJlQm90Q2hhbm5lbFBlcm1pc3Npb25zKGJvdCwgZ3VpbGRJZCwgW1wiTUFOQUdFX0dVSUxEXCJdKTtcblxuICAgIHJldHVybiBhd2FpdCBnZXRJbnZpdGVzT2xkKGd1aWxkSWQpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZXR1cEludml0ZXNQZXJtQ2hlY2tzKGJvdDogQm90V2l0aENhY2hlKSB7XG4gIGNyZWF0ZUludml0ZShib3QpO1xuICBnZXRDaGFubmVsSW52aXRlcyhib3QpO1xuICBnZXRJbnZpdGVzKGJvdCk7XG59XG4iXX0=