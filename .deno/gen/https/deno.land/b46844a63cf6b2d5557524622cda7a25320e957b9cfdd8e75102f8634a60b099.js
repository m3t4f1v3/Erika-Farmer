import { AllowedMentionsTypes } from "../../deps.ts";
export default function editFollowupMessage(bot) {
    const editFollowupMessageOld = bot.helpers.editFollowupMessage;
    bot.helpers.editFollowupMessage = async function (token, messageId, options) {
        if (options.content && options.content.length > 2000) {
            throw Error("MESSAGE_MAX_LENGTH");
        }
        if (options.embeds && options.embeds.length > 10) {
            options.embeds.splice(10);
        }
        if (options.allowedMentions) {
            if (options.allowedMentions.users?.length) {
                if (options.allowedMentions.parse?.includes(AllowedMentionsTypes.UserMentions)) {
                    options.allowedMentions.parse = options.allowedMentions.parse.filter((p) => p !== "users");
                }
                if (options.allowedMentions.users.length > 100) {
                    options.allowedMentions.users = options.allowedMentions.users.slice(0, 100);
                }
            }
            if (options.allowedMentions.roles?.length) {
                if (options.allowedMentions.parse?.includes(AllowedMentionsTypes.RoleMentions)) {
                    options.allowedMentions.parse = options.allowedMentions.parse.filter((p) => p !== "roles");
                }
                if (options.allowedMentions.roles.length > 100) {
                    options.allowedMentions.roles = options.allowedMentions.roles.slice(0, 100);
                }
            }
        }
        return await editFollowupMessageOld(token, messageId, options);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdEZvbGxvd3VwTWVzc2FnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImVkaXRGb2xsb3d1cE1lc3NhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLG9CQUFvQixFQUFnQixNQUFNLGVBQWUsQ0FBQztBQUVuRSxNQUFNLENBQUMsT0FBTyxVQUFVLG1CQUFtQixDQUFDLEdBQWlCO0lBQzNELE1BQU0sc0JBQXNCLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztJQUUvRCxHQUFHLENBQUMsT0FBTyxDQUFDLG1CQUFtQixHQUFHLEtBQUssV0FDckMsS0FBSyxFQUNMLFNBQVMsRUFDVCxPQUFPO1FBRVAsSUFBSSxPQUFPLENBQUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLElBQUksRUFBRTtZQUNwRCxNQUFNLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1NBQ25DO1FBRUQsSUFBSSxPQUFPLENBQUMsTUFBTSxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLEVBQUUsRUFBRTtZQUNoRCxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUMzQjtRQUVELElBQUksT0FBTyxDQUFDLGVBQWUsRUFBRTtZQUMzQixJQUFJLE9BQU8sQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRTtnQkFDekMsSUFDRSxPQUFPLENBQUMsZUFBZSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQ3JDLG9CQUFvQixDQUFDLFlBQVksQ0FDbEMsRUFDRDtvQkFDQSxPQUFPLENBQUMsZUFBZSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FDbkUsQ0FBQyxFQUNELEVBQUUsQ0FBQyxDQUFDLEtBQUssT0FBTyxDQUFDLENBQUM7aUJBQ3JCO2dCQUVELElBQUksT0FBTyxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRTtvQkFDOUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUNqRSxDQUFDLEVBQ0QsR0FBRyxDQUNKLENBQUM7aUJBQ0g7YUFDRjtZQUVELElBQUksT0FBTyxDQUFDLGVBQWUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFO2dCQUN6QyxJQUNFLE9BQU8sQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FDckMsb0JBQW9CLENBQUMsWUFBWSxDQUNsQyxFQUNEO29CQUNBLE9BQU8sQ0FBQyxlQUFlLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUNuRSxDQUFDLEVBQ0QsRUFBRSxDQUFDLENBQUMsS0FBSyxPQUFPLENBQUMsQ0FBQztpQkFDckI7Z0JBRUQsSUFBSSxPQUFPLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsR0FBRyxFQUFFO29CQUM5QyxPQUFPLENBQUMsZUFBZSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQ2pFLENBQUMsRUFDRCxHQUFHLENBQ0osQ0FBQztpQkFDSDthQUNGO1NBQ0Y7UUFFRCxPQUFPLE1BQU0sc0JBQXNCLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNqRSxDQUFDLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWxsb3dlZE1lbnRpb25zVHlwZXMsIEJvdFdpdGhDYWNoZSB9IGZyb20gXCIuLi8uLi9kZXBzLnRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGVkaXRGb2xsb3d1cE1lc3NhZ2UoYm90OiBCb3RXaXRoQ2FjaGUpIHtcbiAgY29uc3QgZWRpdEZvbGxvd3VwTWVzc2FnZU9sZCA9IGJvdC5oZWxwZXJzLmVkaXRGb2xsb3d1cE1lc3NhZ2U7XG5cbiAgYm90LmhlbHBlcnMuZWRpdEZvbGxvd3VwTWVzc2FnZSA9IGFzeW5jIGZ1bmN0aW9uIChcbiAgICB0b2tlbixcbiAgICBtZXNzYWdlSWQsXG4gICAgb3B0aW9ucyxcbiAgKSB7XG4gICAgaWYgKG9wdGlvbnMuY29udGVudCAmJiBvcHRpb25zLmNvbnRlbnQubGVuZ3RoID4gMjAwMCkge1xuICAgICAgdGhyb3cgRXJyb3IoXCJNRVNTQUdFX01BWF9MRU5HVEhcIik7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuZW1iZWRzICYmIG9wdGlvbnMuZW1iZWRzLmxlbmd0aCA+IDEwKSB7XG4gICAgICBvcHRpb25zLmVtYmVkcy5zcGxpY2UoMTApO1xuICAgIH1cblxuICAgIGlmIChvcHRpb25zLmFsbG93ZWRNZW50aW9ucykge1xuICAgICAgaWYgKG9wdGlvbnMuYWxsb3dlZE1lbnRpb25zLnVzZXJzPy5sZW5ndGgpIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIG9wdGlvbnMuYWxsb3dlZE1lbnRpb25zLnBhcnNlPy5pbmNsdWRlcyhcbiAgICAgICAgICAgIEFsbG93ZWRNZW50aW9uc1R5cGVzLlVzZXJNZW50aW9ucyxcbiAgICAgICAgICApXG4gICAgICAgICkge1xuICAgICAgICAgIG9wdGlvbnMuYWxsb3dlZE1lbnRpb25zLnBhcnNlID0gb3B0aW9ucy5hbGxvd2VkTWVudGlvbnMucGFyc2UuZmlsdGVyKChcbiAgICAgICAgICAgIHAsXG4gICAgICAgICAgKSA9PiBwICE9PSBcInVzZXJzXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuYWxsb3dlZE1lbnRpb25zLnVzZXJzLmxlbmd0aCA+IDEwMCkge1xuICAgICAgICAgIG9wdGlvbnMuYWxsb3dlZE1lbnRpb25zLnVzZXJzID0gb3B0aW9ucy5hbGxvd2VkTWVudGlvbnMudXNlcnMuc2xpY2UoXG4gICAgICAgICAgICAwLFxuICAgICAgICAgICAgMTAwLFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG9wdGlvbnMuYWxsb3dlZE1lbnRpb25zLnJvbGVzPy5sZW5ndGgpIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIG9wdGlvbnMuYWxsb3dlZE1lbnRpb25zLnBhcnNlPy5pbmNsdWRlcyhcbiAgICAgICAgICAgIEFsbG93ZWRNZW50aW9uc1R5cGVzLlJvbGVNZW50aW9ucyxcbiAgICAgICAgICApXG4gICAgICAgICkge1xuICAgICAgICAgIG9wdGlvbnMuYWxsb3dlZE1lbnRpb25zLnBhcnNlID0gb3B0aW9ucy5hbGxvd2VkTWVudGlvbnMucGFyc2UuZmlsdGVyKChcbiAgICAgICAgICAgIHAsXG4gICAgICAgICAgKSA9PiBwICE9PSBcInJvbGVzXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuYWxsb3dlZE1lbnRpb25zLnJvbGVzLmxlbmd0aCA+IDEwMCkge1xuICAgICAgICAgIG9wdGlvbnMuYWxsb3dlZE1lbnRpb25zLnJvbGVzID0gb3B0aW9ucy5hbGxvd2VkTWVudGlvbnMucm9sZXMuc2xpY2UoXG4gICAgICAgICAgICAwLFxuICAgICAgICAgICAgMTAwLFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYXdhaXQgZWRpdEZvbGxvd3VwTWVzc2FnZU9sZCh0b2tlbiwgbWVzc2FnZUlkLCBvcHRpb25zKTtcbiAgfTtcbn1cbiJdfQ==