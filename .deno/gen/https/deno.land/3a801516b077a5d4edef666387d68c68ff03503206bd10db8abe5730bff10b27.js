import { ChannelTypes } from "../../types/shared.ts";
/** Create a channel in your server. Bot needs MANAGE_CHANNEL permissions in the server. */ export async function createChannel(bot, guildId, options, reason) {
    // BITRATE IS IN THOUSANDS SO IF USER PROVIDES 32 WE CONVERT TO 32000
    if (options?.bitrate && options.bitrate < 1000) options.bitrate *= 1000;
    const result = await bot.rest.runMethod(bot.rest, "POST", bot.constants.routes.GUILD_CHANNELS(guildId), options ? {
        name: options.name,
        topic: options.topic,
        bitrate: options.bitrate,
        user_limit: options.userLimit,
        rate_limit_per_user: options.rateLimitPerUser,
        position: options.position,
        parent_id: options.parentId?.toString(),
        nsfw: options.nsfw,
        permission_overwrites: options?.permissionOverwrites?.map((overwrite)=>({
                id: overwrite.id.toString(),
                type: overwrite.type,
                allow: overwrite.allow ? bot.utils.calculateBits(overwrite.allow) : null,
                deny: overwrite.deny ? bot.utils.calculateBits(overwrite.deny) : null
            })
        ),
        type: options?.type || ChannelTypes.GuildText,
        reason,
        default_auto_archive_duration: options?.defaultAutoArchiveDuration
    } : {});
    return bot.transformers.channel(bot, {
        channel: result,
        guildId
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEJvdCB9IGZyb20gXCIuLi8uLi9ib3QudHNcIjtcbmltcG9ydCB7IENoYW5uZWxUeXBlcyB9IGZyb20gXCIuLi8uLi90eXBlcy9zaGFyZWQudHNcIjtcbmltcG9ydCB7IERpc2NvcmRDaGFubmVsIH0gZnJvbSBcIi4uLy4uL3R5cGVzL2Rpc2NvcmQudHNcIjtcbmltcG9ydCB7IE92ZXJ3cml0ZVJlYWRhYmxlIH0gZnJvbSBcIi4vZWRpdENoYW5uZWxPdmVyd3JpdGUudHNcIjtcblxuLyoqIENyZWF0ZSBhIGNoYW5uZWwgaW4geW91ciBzZXJ2ZXIuIEJvdCBuZWVkcyBNQU5BR0VfQ0hBTk5FTCBwZXJtaXNzaW9ucyBpbiB0aGUgc2VydmVyLiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNoYW5uZWwoYm90OiBCb3QsIGd1aWxkSWQ6IGJpZ2ludCwgb3B0aW9ucz86IENyZWF0ZUd1aWxkQ2hhbm5lbCwgcmVhc29uPzogc3RyaW5nKSB7XG4gIC8vIEJJVFJBVEUgSVMgSU4gVEhPVVNBTkRTIFNPIElGIFVTRVIgUFJPVklERVMgMzIgV0UgQ09OVkVSVCBUTyAzMjAwMFxuICBpZiAob3B0aW9ucz8uYml0cmF0ZSAmJiBvcHRpb25zLmJpdHJhdGUgPCAxMDAwKSBvcHRpb25zLmJpdHJhdGUgKj0gMTAwMDtcblxuICBjb25zdCByZXN1bHQgPSBhd2FpdCBib3QucmVzdC5ydW5NZXRob2Q8RGlzY29yZENoYW5uZWw+KFxuICAgIGJvdC5yZXN0LFxuICAgIFwiUE9TVFwiLFxuICAgIGJvdC5jb25zdGFudHMucm91dGVzLkdVSUxEX0NIQU5ORUxTKGd1aWxkSWQpLFxuICAgIG9wdGlvbnNcbiAgICAgID8ge1xuICAgICAgICBuYW1lOiBvcHRpb25zLm5hbWUsXG4gICAgICAgIHRvcGljOiBvcHRpb25zLnRvcGljLFxuICAgICAgICBiaXRyYXRlOiBvcHRpb25zLmJpdHJhdGUsXG4gICAgICAgIHVzZXJfbGltaXQ6IG9wdGlvbnMudXNlckxpbWl0LFxuICAgICAgICByYXRlX2xpbWl0X3Blcl91c2VyOiBvcHRpb25zLnJhdGVMaW1pdFBlclVzZXIsXG4gICAgICAgIHBvc2l0aW9uOiBvcHRpb25zLnBvc2l0aW9uLFxuICAgICAgICBwYXJlbnRfaWQ6IG9wdGlvbnMucGFyZW50SWQ/LnRvU3RyaW5nKCksXG4gICAgICAgIG5zZnc6IG9wdGlvbnMubnNmdyxcbiAgICAgICAgcGVybWlzc2lvbl9vdmVyd3JpdGVzOiBvcHRpb25zPy5wZXJtaXNzaW9uT3ZlcndyaXRlcz8ubWFwKChvdmVyd3JpdGUpID0+ICh7XG4gICAgICAgICAgaWQ6IG92ZXJ3cml0ZS5pZC50b1N0cmluZygpLFxuICAgICAgICAgIHR5cGU6IG92ZXJ3cml0ZS50eXBlLFxuICAgICAgICAgIGFsbG93OiBvdmVyd3JpdGUuYWxsb3cgPyBib3QudXRpbHMuY2FsY3VsYXRlQml0cyhvdmVyd3JpdGUuYWxsb3cpIDogbnVsbCxcbiAgICAgICAgICBkZW55OiBvdmVyd3JpdGUuZGVueSA/IGJvdC51dGlscy5jYWxjdWxhdGVCaXRzKG92ZXJ3cml0ZS5kZW55KSA6IG51bGwsXG4gICAgICAgIH0pKSxcbiAgICAgICAgdHlwZTogb3B0aW9ucz8udHlwZSB8fCBDaGFubmVsVHlwZXMuR3VpbGRUZXh0LFxuICAgICAgICByZWFzb24sXG4gICAgICAgIGRlZmF1bHRfYXV0b19hcmNoaXZlX2R1cmF0aW9uOiBvcHRpb25zPy5kZWZhdWx0QXV0b0FyY2hpdmVEdXJhdGlvbixcbiAgICAgIH1cbiAgICAgIDoge30sXG4gICk7XG5cbiAgcmV0dXJuIGJvdC50cmFuc2Zvcm1lcnMuY2hhbm5lbChib3QsIHsgY2hhbm5lbDogcmVzdWx0LCBndWlsZElkIH0pO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENyZWF0ZUd1aWxkQ2hhbm5lbCB7XG4gIC8qKiBDaGFubmVsIG5hbWUgKDEtMTAwIGNoYXJhY3RlcnMpICovXG4gIG5hbWU6IHN0cmluZztcbiAgLyoqIFRoZSB0eXBlIG9mIGNoYW5uZWwgKi9cbiAgdHlwZT86IENoYW5uZWxUeXBlcztcbiAgLyoqIENoYW5uZWwgdG9waWMgKDAtMTAyNCBjaGFyYWN0ZXJzKSAqL1xuICB0b3BpYz86IHN0cmluZztcbiAgLyoqIFRoZSBiaXRyYXRlIChpbiBiaXRzKSBvZiB0aGUgdm9pY2UgY2hhbm5lbCAodm9pY2Ugb25seSkgKi9cbiAgYml0cmF0ZT86IG51bWJlcjtcbiAgLyoqIFRoZSB1c2VyIGxpbWl0IG9mIHRoZSB2b2ljZSBjaGFubmVsICh2b2ljZSBvbmx5KSAqL1xuICB1c2VyTGltaXQ/OiBudW1iZXI7XG4gIC8qKiBBbW91bnQgb2Ygc2Vjb25kcyBhIHVzZXIgaGFzIHRvIHdhaXQgYmVmb3JlIHNlbmRpbmcgYW5vdGhlciBtZXNzYWdlICgwLTIxNjAwKTsgYm90cywgYXMgd2VsbCBhcyB1c2VycyB3aXRoIHRoZSBwZXJtaXNzaW9uIGBtYW5hZ2VfbWVzc2FnZXNgIG9yIGBtYW5hZ2VfY2hhbm5lbGAsIGFyZSB1bmFmZmVjdGVkICovXG4gIHJhdGVMaW1pdFBlclVzZXI/OiBudW1iZXI7XG4gIC8qKiBTb3J0aW5nIHBvc2l0aW9uIG9mIHRoZSBjaGFubmVsICovXG4gIHBvc2l0aW9uPzogbnVtYmVyO1xuICAvKiogVGhlIGNoYW5uZWwncyBwZXJtaXNzaW9uIG92ZXJ3cml0ZXMgKi9cbiAgcGVybWlzc2lvbk92ZXJ3cml0ZXM/OiBPdmVyd3JpdGVSZWFkYWJsZVtdO1xuICAvKiogSWQgb2YgdGhlIHBhcmVudCBjYXRlZ29yeSBmb3IgYSBjaGFubmVsICovXG4gIHBhcmVudElkPzogYmlnaW50O1xuICAvKiogV2hldGhlciB0aGUgY2hhbm5lbCBpcyBuc2Z3ICovXG4gIG5zZnc/OiBib29sZWFuO1xuICAvKiogRGVmYXVsdCBkdXJhdGlvbiAoaW4gbWludXRlcykgdGhhdCBjbGllbnRzIChub3QgdGhlIEFQSSkgdXNlIGZvciBuZXdseSBjcmVhdGVkIHRocmVhZHMgaW4gdGhpcyBjaGFubmVsLCB0byBkZXRlcm1pbmUgd2hlbiB0byBhdXRvbWF0aWNhbGx5IGFyY2hpdmUgdGhlIHRocmVhZCBhZnRlciB0aGUgbGFzdCBhY3Rpdml0eSAqL1xuICBkZWZhdWx0QXV0b0FyY2hpdmVEdXJhdGlvbj86IG51bWJlcjtcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxTQUFTLFlBQVksUUFBUSx1QkFBdUIsQ0FBQztBQUlyRCwyRkFBMkYsQ0FDM0YsT0FBTyxlQUFlLGFBQWEsQ0FBQyxHQUFRLEVBQUUsT0FBZSxFQUFFLE9BQTRCLEVBQUUsTUFBZSxFQUFFO0lBQzVHLHFFQUFxRTtJQUNyRSxJQUFJLE9BQU8sRUFBRSxPQUFPLElBQUksT0FBTyxDQUFDLE9BQU8sR0FBRyxJQUFJLEVBQUUsT0FBTyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUM7SUFFeEUsTUFBTSxNQUFNLEdBQUcsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FDckMsR0FBRyxDQUFDLElBQUksRUFDUixNQUFNLEVBQ04sR0FBRyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxFQUM1QyxPQUFPLEdBQ0g7UUFDQSxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUk7UUFDbEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLO1FBQ3BCLE9BQU8sRUFBRSxPQUFPLENBQUMsT0FBTztRQUN4QixVQUFVLEVBQUUsT0FBTyxDQUFDLFNBQVM7UUFDN0IsbUJBQW1CLEVBQUUsT0FBTyxDQUFDLGdCQUFnQjtRQUM3QyxRQUFRLEVBQUUsT0FBTyxDQUFDLFFBQVE7UUFDMUIsU0FBUyxFQUFFLE9BQU8sQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFO1FBQ3ZDLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTtRQUNsQixxQkFBcUIsRUFBRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsR0FBRyxDQUFDLENBQUMsU0FBUyxHQUFLLENBQUM7Z0JBQ3hFLEVBQUUsRUFBRSxTQUFTLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRTtnQkFDM0IsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJO2dCQUNwQixLQUFLLEVBQUUsU0FBUyxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSTtnQkFDeEUsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUk7YUFDdEUsQ0FBQztRQUFBLENBQUM7UUFDSCxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksSUFBSSxZQUFZLENBQUMsU0FBUztRQUM3QyxNQUFNO1FBQ04sNkJBQTZCLEVBQUUsT0FBTyxFQUFFLDBCQUEwQjtLQUNuRSxHQUNDLEVBQUUsQ0FDUCxBQUFDO0lBRUYsT0FBTyxHQUFHLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUU7UUFBRSxPQUFPLEVBQUUsTUFBTTtRQUFFLE9BQU87S0FBRSxDQUFDLENBQUM7Q0FDcEUifQ==