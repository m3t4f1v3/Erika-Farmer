import { GuildFeatures } from "../../types/shared.ts";
import { ToggleBitfieldBigint } from "./ToggleBitfield.ts";
export const GuildToggle = {
    owner: 1n << 0n,
    widgetEnabled: 1n << 1n,
    large: 1n << 2n,
    unavailable: 1n << 3n,
    premiumProgressBarEnabled: 1n << 4n,
    inviteSplash: 1n << 5n,
    vipRegions: 1n << 6n,
    vanityUrl: 1n << 7n,
    verified: 1n << 8n,
    partnered: 1n << 9n,
    community: 1n << 10n,
    commerce: 1n << 11n,
    news: 1n << 12n,
    discoverable: 1n << 13n,
    discoverableDisabled: 1n << 14n,
    feature: 1n << 15n,
    animatedIcon: 1n << 16n,
    banner: 1n << 17n,
    welcomeScreenEnabled: 1n << 18n,
    memberVerificationGateEnabled: 1n << 19n,
    previewEnabled: 1n << 20n,
    ticketedEventsEnabled: 1n << 21n,
    monetizationEnabled: 1n << 22n,
    moreStickers: 1n << 23n,
    privateThreads: 1n << 26n,
    roleIcons: 1n << 27n,
};
export class GuildToggles extends ToggleBitfieldBigint {
    constructor(guild) {
        super();
        if (guild.owner)
            this.add(GuildToggle.owner);
        if (guild.widget_enabled)
            this.add(GuildToggle.widgetEnabled);
        if (guild.large)
            this.add(GuildToggle.large);
        if (guild.unavailable)
            this.add(GuildToggle.unavailable);
        if (guild.premium_progress_bar_enabled)
            this.add(GuildToggle.premiumProgressBarEnabled);
        if (guild.features.includes(GuildFeatures.InviteSplash))
            this.add(GuildToggle.inviteSplash);
        if (guild.features.includes(GuildFeatures.VipRegions))
            this.add(GuildToggle.vipRegions);
        if (guild.features.includes(GuildFeatures.VanityUrl))
            this.add(GuildToggle.vanityUrl);
        if (guild.features.includes(GuildFeatures.Verified))
            this.add(GuildToggle.verified);
        if (guild.features.includes(GuildFeatures.Partnered))
            this.add(GuildToggle.partnered);
        if (guild.features.includes(GuildFeatures.Community))
            this.add(GuildToggle.community);
        if (guild.features.includes(GuildFeatures.Commerce))
            this.add(GuildToggle.commerce);
        if (guild.features.includes(GuildFeatures.News))
            this.add(GuildToggle.news);
        if (guild.features.includes(GuildFeatures.Discoverable))
            this.add(GuildToggle.discoverable);
        if (guild.features.includes(GuildFeatures.DiscoverableDisabled))
            this.add(GuildToggle.discoverableDisabled);
        if (guild.features.includes(GuildFeatures.Feature))
            this.add(GuildToggle.feature);
        if (guild.features.includes(GuildFeatures.AnimatedIcon))
            this.add(GuildToggle.animatedIcon);
        if (guild.features.includes(GuildFeatures.Banner))
            this.add(GuildToggle.banner);
        if (guild.features.includes(GuildFeatures.WelcomeScreenEnabled))
            this.add(GuildToggle.welcomeScreenEnabled);
        if (guild.features.includes(GuildFeatures.MemberVerificationGateEnabled)) {
            this.add(GuildToggle.memberVerificationGateEnabled);
        }
        if (guild.features.includes(GuildFeatures.PreviewEnabled))
            this.add(GuildToggle.previewEnabled);
        if (guild.features.includes(GuildFeatures.TicketedEventsEnabled))
            this.add(GuildToggle.ticketedEventsEnabled);
        if (guild.features.includes(GuildFeatures.MonetizationEnabled))
            this.add(GuildToggle.monetizationEnabled);
        if (guild.features.includes(GuildFeatures.MoreStickers))
            this.add(GuildToggle.moreStickers);
        if (guild.features.includes(GuildFeatures.PrivateThreads))
            this.add(GuildToggle.privateThreads);
        if (guild.features.includes(GuildFeatures.RoleIcons))
            this.add(GuildToggle.roleIcons);
    }
    get owner() {
        return this.has("owner");
    }
    get widgetEnabled() {
        return this.has("widgetEnabled");
    }
    get large() {
        return this.has("large");
    }
    get unavailable() {
        return this.has("unavailable");
    }
    get premiumProgressBarEnabled() {
        return this.has("premiumProgressBarEnabled");
    }
    get inviteSplash() {
        return this.has("inviteSplash");
    }
    get vipRegions() {
        return this.has("vipRegions");
    }
    get vanityUrl() {
        return this.has("vanityUrl");
    }
    get verified() {
        return this.has("verified");
    }
    get partnered() {
        return this.has("partnered");
    }
    get community() {
        return this.has("community");
    }
    get commerce() {
        return this.has("commerce");
    }
    get news() {
        return this.has("news");
    }
    get discoverable() {
        return this.has("discoverable");
    }
    get discoverableDisabled() {
        return this.has("discoverableDisabled");
    }
    get feature() {
        return this.has("feature");
    }
    get animatedIcon() {
        return this.has("animatedIcon");
    }
    get banner() {
        return this.has("banner");
    }
    get welcomeScreenEnabled() {
        return this.has("welcomeScreenEnabled");
    }
    get memberVerificationGateEnabled() {
        return this.has("memberVerificationGateEnabled");
    }
    get previewEnabled() {
        return this.has("previewEnabled");
    }
    get ticketedEventsEnabled() {
        return this.has("ticketedEventsEnabled");
    }
    get monetizationEnabled() {
        return this.has("monetizationEnabled");
    }
    get moreStickers() {
        return this.has("moreStickers");
    }
    get privateThreads() {
        return this.has("privateThreads");
    }
    get roleIcons() {
        return this.has("roleIcons");
    }
    has(permissions) {
        if (!Array.isArray(permissions))
            return super.contains(GuildToggle[permissions]);
        return super.contains(permissions.reduce((a, b) => (a |= GuildToggle[b]), 0n));
    }
    list() {
        const json = {};
        for (const [key, value] of Object.entries(GuildToggle)) {
            json[key] = super.contains(value);
        }
        return json;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3VpbGQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJndWlsZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFrQixvQkFBb0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRTNFLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRztJQUV6QixLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUU7SUFFZixhQUFhLEVBQUUsRUFBRSxJQUFJLEVBQUU7SUFFdkIsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFO0lBRWYsV0FBVyxFQUFFLEVBQUUsSUFBSSxFQUFFO0lBRXJCLHlCQUF5QixFQUFFLEVBQUUsSUFBSSxFQUFFO0lBS25DLFlBQVksRUFBRSxFQUFFLElBQUksRUFBRTtJQUV0QixVQUFVLEVBQUUsRUFBRSxJQUFJLEVBQUU7SUFFcEIsU0FBUyxFQUFFLEVBQUUsSUFBSSxFQUFFO0lBRW5CLFFBQVEsRUFBRSxFQUFFLElBQUksRUFBRTtJQUVsQixTQUFTLEVBQUUsRUFBRSxJQUFJLEVBQUU7SUFFbkIsU0FBUyxFQUFFLEVBQUUsSUFBSSxHQUFHO0lBRXBCLFFBQVEsRUFBRSxFQUFFLElBQUksR0FBRztJQUVuQixJQUFJLEVBQUUsRUFBRSxJQUFJLEdBQUc7SUFFZixZQUFZLEVBQUUsRUFBRSxJQUFJLEdBQUc7SUFFdkIsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLEdBQUc7SUFFL0IsT0FBTyxFQUFFLEVBQUUsSUFBSSxHQUFHO0lBRWxCLFlBQVksRUFBRSxFQUFFLElBQUksR0FBRztJQUV2QixNQUFNLEVBQUUsRUFBRSxJQUFJLEdBQUc7SUFFakIsb0JBQW9CLEVBQUUsRUFBRSxJQUFJLEdBQUc7SUFFL0IsNkJBQTZCLEVBQUUsRUFBRSxJQUFJLEdBQUc7SUFFeEMsY0FBYyxFQUFFLEVBQUUsSUFBSSxHQUFHO0lBRXpCLHFCQUFxQixFQUFFLEVBQUUsSUFBSSxHQUFHO0lBRWhDLG1CQUFtQixFQUFFLEVBQUUsSUFBSSxHQUFHO0lBRTlCLFlBQVksRUFBRSxFQUFFLElBQUksR0FBRztJQUV2QixjQUFjLEVBQUUsRUFBRSxJQUFJLEdBQUc7SUFFekIsU0FBUyxFQUFFLEVBQUUsSUFBSSxHQUFHO0NBQ3JCLENBQUM7QUFFRixNQUFNLE9BQU8sWUFBYSxTQUFRLG9CQUFvQjtJQUNwRCxZQUFZLEtBQW1CO1FBQzdCLEtBQUssRUFBRSxDQUFDO1FBRVIsSUFBSSxLQUFLLENBQUMsS0FBSztZQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdDLElBQUksS0FBSyxDQUFDLGNBQWM7WUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUM5RCxJQUFJLEtBQUssQ0FBQyxLQUFLO1lBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDN0MsSUFBSSxLQUFLLENBQUMsV0FBVztZQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3pELElBQUksS0FBSyxDQUFDLDRCQUE0QjtZQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLHlCQUF5QixDQUFDLENBQUM7UUFFeEYsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDO1lBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDNUYsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDO1lBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDeEYsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO1lBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdEYsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDO1lBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDcEYsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO1lBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdEYsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO1lBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdEYsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDO1lBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDcEYsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDO1lBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUUsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDO1lBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDNUYsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUM7WUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQzVHLElBQUksS0FBSyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQztZQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFD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cmRHdWlsZCB9IGZyb20gXCIuLi8uLi90eXBlcy9kaXNjb3JkLnRzXCI7XG5pbXBvcnQgeyBHdWlsZEZlYXR1cmVzIH0gZnJvbSBcIi4uLy4uL3R5cGVzL3NoYXJlZC50c1wiO1xuaW1wb3J0IHsgVG9nZ2xlQml0ZmllbGQsIFRvZ2dsZUJpdGZpZWxkQmlnaW50IH0gZnJvbSBcIi4vVG9nZ2xlQml0ZmllbGQudHNcIjtcblxuZXhwb3J0IGNvbnN0IEd1aWxkVG9nZ2xlID0ge1xuICAvKiogV2hldGhlciB0aGUgYm90IGlzIHRoZSBvd25lciBvZiB0aGUgZ3VpbGQgKi9cbiAgb3duZXI6IDFuIDw8IDBuLFxuICAvKiogV2hldGhlciB0aGUgc2VydmVyIHdpZGdldCBpcyBlbmFibGVkICovXG4gIHdpZGdldEVuYWJsZWQ6IDFuIDw8IDFuLFxuICAvKiogV2hldGhlciB0aGlzIGlzIGNvbnNpZGVyZWQgYSBsYXJnZSBndWlsZCAqL1xuICBsYXJnZTogMW4gPDwgMm4sXG4gIC8qKiBXaGV0aGVyIHRoaXMgZ3VpbGQgaXMgdW5hdmFpbGFibGUgZHVlIHRvIGFuIG91dGFnZSAqL1xuICB1bmF2YWlsYWJsZTogMW4gPDwgM24sXG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgdGhlIGJvb3N0IHByb2dyZXNzIGJhciBlbmFibGVkICovXG4gIHByZW1pdW1Qcm9ncmVzc0JhckVuYWJsZWQ6IDFuIDw8IDRuLFxuXG4gIC8vIEdVSUxEIEZFQVRVUkVTIEFSRSBCRUxPVyBUSElTXG5cbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGhhcyBhY2Nlc3MgdG8gc2V0IGFuIGludml0ZSBzcGxhc2ggYmFja2dyb3VuZCAqL1xuICBpbnZpdGVTcGxhc2g6IDFuIDw8IDVuLFxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgaGFzIGFjY2VzcyB0byBzZXQgMzg0IGticHMgYml0cmF0ZSBpbiB2b2ljZSAocHJldmlvdXNseSBWSVAgdm9pY2Ugc2VydmVycykgKi9cbiAgdmlwUmVnaW9uczogMW4gPDwgNm4sXG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgYWNjZXNzIHRvIHNldCBhIHZhbml0eSBVUkwgKi9cbiAgdmFuaXR5VXJsOiAxbiA8PCA3bixcbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGlzIHZlcmlmaWVkICovXG4gIHZlcmlmaWVkOiAxbiA8PCA4bixcbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGlzIHBhcnRuZXJlZCAqL1xuICBwYXJ0bmVyZWQ6IDFuIDw8IDluLFxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgY2FuIGVuYWJsZSB3ZWxjb21lIHNjcmVlbiwgTWVtYmVyc2hpcCBTY3JlZW5pbmcsIHN0YWdlIGNoYW5uZWxzIGFuZCBkaXNjb3ZlcnksIGFuZCByZWNlaXZlcyBjb21tdW5pdHkgdXBkYXRlcyAqL1xuICBjb21tdW5pdHk6IDFuIDw8IDEwbixcbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGhhcyBhY2Nlc3MgdG8gdXNlIGNvbW1lcmNlIGZlYXR1cmVzIChpLmUuIGNyZWF0ZSBzdG9yZSBjaGFubmVscykgKi9cbiAgY29tbWVyY2U6IDFuIDw8IDExbixcbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGhhcyBhY2Nlc3MgdG8gY3JlYXRlIG5ld3MgY2hhbm5lbHMgKi9cbiAgbmV3czogMW4gPDwgMTJuLFxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgaXMgYWJsZSB0byBiZSBkaXNjb3ZlcmVkIGluIHRoZSBkaXJlY3RvcnkgKi9cbiAgZGlzY292ZXJhYmxlOiAxbiA8PCAxM24sXG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBjYW5ub3QgYmUgZGlzY292ZXJhYmxlICovXG4gIGRpc2NvdmVyYWJsZURpc2FibGVkOiAxbiA8PCAxNG4sXG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBpcyBhYmxlIHRvIGJlIGZlYXR1cmVkIGluIHRoZSBkaXJlY3RvcnkgKi9cbiAgZmVhdHVyZTogMW4gPDwgMTVuLFxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgaGFzIGFjY2VzcyB0byBzZXQgYW4gYW5pbWF0ZWQgZ3VpbGQgaWNvbiAqL1xuICBhbmltYXRlZEljb246IDFuIDw8IDE2bixcbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGhhcyBhY2Nlc3MgdG8gc2V0IGEgZ3VpbGQgYmFubmVyIGltYWdlICovXG4gIGJhbm5lcjogMW4gPDwgMTduLFxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgaGFzIGVuYWJsZWQgdGhlIHdlbGNvbWUgc2NyZWVuICovXG4gIHdlbGNvbWVTY3JlZW5FbmFibGVkOiAxbiA8PCAxOG4sXG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgZW5hYmxlZCBbTWVtYmVyc2hpcCBTY3JlZW5pbmddKGh0dHBzOi8vZGlzY29yZC5jb20vZGV2ZWxvcGVycy9kb2NzL3Jlc291cmNlcy9ndWlsZCNtZW1iZXJzaGlwLXNjcmVlbmluZy1vYmplY3QpICovXG4gIG1lbWJlclZlcmlmaWNhdGlvbkdhdGVFbmFibGVkOiAxbiA8PCAxOW4sXG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBjYW4gYmUgcHJldmlld2VkIGJlZm9yZSBqb2luaW5nIHZpYSBNZW1iZXJzaGlwIFNjcmVlbmluZyBvciB0aGUgZGlyZWN0b3J5ICovXG4gIHByZXZpZXdFbmFibGVkOiAxbiA8PCAyMG4sXG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgZW5hYmxlZCB0aWNrZXRlZCBldmVudHMgKi9cbiAgdGlja2V0ZWRFdmVudHNFbmFibGVkOiAxbiA8PCAyMW4sXG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgZW5hYmxlZCBtb25ldGl6YXRpb24gKi9cbiAgbW9uZXRpemF0aW9uRW5hYmxlZDogMW4gPDwgMjJuLFxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgaGFzIGluY3JlYXNlZCBjdXN0b20gc3RpY2tlciBzbG90cyAqL1xuICBtb3JlU3RpY2tlcnM6IDFuIDw8IDIzbixcbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGhhcyBhY2Nlc3MgdG8gY3JlYXRlIHByaXZhdGUgdGhyZWFkcyAqL1xuICBwcml2YXRlVGhyZWFkczogMW4gPDwgMjZuLFxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgaXMgYWJsZSB0byBzZXQgcm9sZSBpY29ucyAqL1xuICByb2xlSWNvbnM6IDFuIDw8IDI3bixcbn07XG5cbmV4cG9ydCBjbGFzcyBHdWlsZFRvZ2dsZXMgZXh0ZW5kcyBUb2dnbGVCaXRmaWVsZEJpZ2ludCB7XG4gIGNvbnN0cnVjdG9yKGd1aWxkOiBEaXNjb3JkR3VpbGQpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgaWYgKGd1aWxkLm93bmVyKSB0aGlzLmFkZChHdWlsZFRvZ2dsZS5vd25lcik7XG4gICAgaWYgKGd1aWxkLndpZGdldF9lbmFibGVkKSB0aGlzLmFkZChHdWlsZFRvZ2dsZS53aWRnZXRFbmFibGVkKTtcbiAgICBpZiAoZ3VpbGQubGFyZ2UpIHRoaXMuYWRkKEd1aWxkVG9nZ2xlLmxhcmdlKTtcbiAgICBpZiAoZ3VpbGQudW5hdmFpbGFibGUpIHRoaXMuYWRkKEd1aWxkVG9nZ2xlLnVuYXZhaWxhYmxlKTtcbiAgICBpZiAoZ3VpbGQucHJlbWl1bV9wcm9ncmVzc19iYXJfZW5hYmxlZCkgdGhpcy5hZGQoR3VpbGRUb2dnbGUucHJlbWl1bVByb2dyZXNzQmFyRW5hYmxlZCk7XG5cbiAgICBpZiAoZ3VpbGQuZmVhdHVyZXMuaW5jbHVkZXMoR3VpbGRGZWF0dXJlcy5JbnZpdGVTcGxhc2gpKSB0aGlzLmFkZChHdWlsZFRvZ2dsZS5pbnZpdGVTcGxhc2gpO1xuICAgIGlmIChndWlsZC5mZWF0dXJlcy5pbmNsdWRlcyhHdWlsZEZlYXR1cmVzLlZpcFJlZ2lvbnMpKSB0aGlzLmFkZChHdWlsZFRvZ2dsZS52aXBSZWdpb25zKTtcbiAgICBpZiAoZ3VpbGQuZmVhdHVyZXMuaW5jbHVkZXMoR3VpbGRGZWF0dXJlcy5WYW5pdHlVcmwpKSB0aGlzLmFkZChHdWlsZFRvZ2dsZS52YW5pdHlVcmwpO1xuICAgIGlmIChndWlsZC5mZWF0dXJlcy5pbmNsdWRlcyhHdWlsZEZlYXR1cmVzLlZlcmlmaWVkKSkgdGhpcy5hZGQoR3VpbGRUb2dnbGUudmVyaWZpZWQpO1xuICAgIGlmIChndWlsZC5mZWF0dXJlcy5pbmNsdWRlcyhHdWlsZEZlYXR1cmVzLlBhcnRuZXJlZCkpIHRoaXMuYWRkKEd1aWxkVG9nZ2xlLnBhcnRuZXJlZCk7XG4gICAgaWYgKGd1aWxkLmZlYXR1cmVzLmluY2x1ZGVzKEd1aWxkRmVhdHVyZXMuQ29tbXVuaXR5KSkgdGhpcy5hZGQoR3VpbGRUb2dnbGUuY29tbXVuaXR5KTtcbiAgICBpZiAoZ3VpbGQuZmVhdHVyZXMuaW5jbHVkZXMoR3VpbGRGZWF0dXJlcy5Db21tZXJjZSkpIHRoaXMuYWRkKEd1aWxkVG9nZ2xlLmNvbW1lcmNlKTtcbiAgICBpZiAoZ3VpbGQuZmVhdHVyZXMuaW5jbHVkZXMoR3VpbGRGZWF0dXJlcy5OZXdzKSkgdGhpcy5hZGQoR3VpbGRUb2dnbGUubmV3cyk7XG4gICAgaWYgKGd1aWxkLmZlYXR1cmVzLmluY2x1ZGVzKEd1aWxkRmVhdHVyZXMuRGlzY292ZXJhYmxlKSkgdGhpcy5hZGQoR3VpbGRUb2dnbGUuZGlzY292ZXJhYmxlKTtcbiAgICBpZiAoZ3VpbGQuZmVhdHVyZXMuaW5jbHVkZXMoR3VpbGRGZWF0dXJlcy5EaXNjb3ZlcmFibGVEaXNhYmxlZCkpIHRoaXMuYWRkKEd1aWxkVG9nZ2xlLmRpc2NvdmVyYWJsZURpc2FibGVkKTtcbiAgICBpZiAoZ3VpbGQuZmVhdHVyZXMuaW5jbHVkZXMoR3VpbGRGZWF0dXJlcy5GZWF0dXJlKSkgdGhpcy5hZGQoR3VpbGRUb2dnbGUuZmVhdHVyZSk7XG4gICAgaWYgKGd1aWxkLmZlYXR1cmVzLmluY2x1ZGVzKEd1aWxkRmVhdHVyZXMuQW5pbWF0ZWRJY29uKSkgdGhpcy5hZGQoR3VpbGRUb2dnbGUuYW5pbWF0ZWRJY29uKTtcbiAgICBpZiAoZ3VpbGQuZmVhdHVyZXMuaW5jbHVkZXMoR3VpbGRGZWF0dXJlcy5CYW5uZXIpKSB0aGlzLmFkZChHdWlsZFRvZ2dsZS5iYW5uZXIpO1xuICAgIGlmIChndWlsZC5mZWF0dXJlcy5pbmNsdWRlcyhHdWlsZEZlYXR1cmVzLldlbGNvbWVTY3JlZW5FbmFibGVkKSkgdGhpcy5hZGQoR3VpbGRUb2dnbGUud2VsY29tZVNjcmVlbkVuYWJsZWQpO1xuICAgIGlmIChndWlsZC5mZWF0dXJlcy5pbmNsdWRlcyhHdWlsZEZlYXR1cmVzLk1lbWJlclZlcmlmaWNhdGlvbkdhdGVFbmFibGVkKSkge1xuICAgICAgdGhpcy5hZGQoR3VpbGRUb2dnbGUubWVtYmVyVmVyaWZpY2F0aW9uR2F0ZUVuYWJsZWQpO1xuICAgIH1cbiAgICBpZiAoZ3VpbGQuZmVhdHVyZXMuaW5jbHVkZXMoR3VpbGRGZWF0dXJlcy5QcmV2aWV3RW5hYmxlZCkpIHRoaXMuYWRkKEd1aWxkVG9nZ2xlLnByZXZpZXdFbmFibGVkKTtcbiAgICBpZiAoZ3VpbGQuZmVhdHVyZXMuaW5jbHVkZXMoR3VpbGRGZWF0dXJlcy5UaWNrZXRlZEV2ZW50c0VuYWJsZWQpKSB0aGlzLmFkZChHdWlsZFRvZ2dsZS50aWNrZXRlZEV2ZW50c0VuYWJsZWQpO1xuICAgIGlmIChndWlsZC5mZWF0dXJlcy5pbmNsdWRlcyhHdWlsZEZlYXR1cmVzLk1vbmV0aXphdGlvbkVuYWJsZWQpKSB0aGlzLmFkZChHdWlsZFRvZ2dsZS5tb25ldGl6YXRpb25FbmFibGVkKTtcbiAgICBpZiAoZ3VpbGQuZmVhdHVyZXMuaW5jbHVkZXMoR3VpbGRGZWF0dXJlcy5Nb3JlU3RpY2tlcnMpKSB0aGlzLmFkZChHdWlsZFRvZ2dsZS5tb3JlU3RpY2tlcnMpO1xuICAgIGlmIChndWlsZC5mZWF0dXJlcy5pbmNsdWRlcyhHdWlsZEZlYXR1cmVzLlByaXZhdGVUaHJlYWRzKSkgdGhpcy5hZGQoR3VpbGRUb2dnbGUucHJpdmF0ZVRocmVhZHMpO1xuICAgIGlmIChndWlsZC5mZWF0dXJlcy5pbmNsdWRlcyhHdWlsZEZlYXR1cmVzLlJvbGVJY29ucykpIHRoaXMuYWRkKEd1aWxkVG9nZ2xlLnJvbGVJY29ucyk7XG4gIH1cblxuICAvKiogV2hldGhlciB0aGUgYm90IGlzIHRoZSBvd25lciBvZiB0aGUgZ3VpbGQgKi9cbiAgZ2V0IG93bmVyKCkge1xuICAgIHJldHVybiB0aGlzLmhhcyhcIm93bmVyXCIpO1xuICB9XG5cbiAgLyoqIFdoZXRoZXIgdGhlIHNlcnZlciB3aWRnZXQgaXMgZW5hYmxlZCAqL1xuICBnZXQgd2lkZ2V0RW5hYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJ3aWRnZXRFbmFibGVkXCIpO1xuICB9XG5cbiAgLyoqIFdoZXRoZXIgdGhpcyBpcyBjb25zaWRlcmVkIGEgbGFyZ2UgZ3VpbGQgKi9cbiAgZ2V0IGxhcmdlKCkge1xuICAgIHJldHVybiB0aGlzLmhhcyhcImxhcmdlXCIpO1xuICB9XG5cbiAgLyoqIFdoZXRoZXIgdGhpcyBndWlsZCBpcyB1bmF2YWlsYWJsZSBkdWUgdG8gYW4gb3V0YWdlICovXG4gIGdldCB1bmF2YWlsYWJsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJ1bmF2YWlsYWJsZVwiKTtcbiAgfVxuXG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgdGhlIGJvb3N0IHByb2dyZXNzIGJhciBlbmFibGVkICovXG4gIGdldCBwcmVtaXVtUHJvZ3Jlc3NCYXJFbmFibGVkKCkge1xuICAgIHJldHVybiB0aGlzLmhhcyhcInByZW1pdW1Qcm9ncmVzc0JhckVuYWJsZWRcIik7XG4gIH1cblxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgaGFzIGFjY2VzcyB0byBzZXQgYW4gaW52aXRlIHNwbGFzaCBiYWNrZ3JvdW5kICovXG4gIGdldCBpbnZpdGVTcGxhc2goKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzKFwiaW52aXRlU3BsYXNoXCIpO1xuICB9XG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgYWNjZXNzIHRvIHNldCAzODQga2JwcyBiaXRyYXRlIGluIHZvaWNlIChwcmV2aW91c2x5IFZJUCB2b2ljZSBzZXJ2ZXJzKSAqL1xuICBnZXQgdmlwUmVnaW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJ2aXBSZWdpb25zXCIpO1xuICB9XG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgYWNjZXNzIHRvIHNldCBhIHZhbml0eSBVUkwgKi9cbiAgZ2V0IHZhbml0eVVybCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJ2YW5pdHlVcmxcIik7XG4gIH1cbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGlzIHZlcmlmaWVkICovXG4gIGdldCB2ZXJpZmllZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJ2ZXJpZmllZFwiKTtcbiAgfVxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgaXMgcGFydG5lcmVkICovXG4gIGdldCBwYXJ0bmVyZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzKFwicGFydG5lcmVkXCIpO1xuICB9XG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBjYW4gZW5hYmxlIHdlbGNvbWUgc2NyZWVuLCBNZW1iZXJzaGlwIFNjcmVlbmluZywgc3RhZ2UgY2hhbm5lbHMgYW5kIGRpc2NvdmVyeSwgYW5kIHJlY2VpdmVzIGNvbW11bml0eSB1cGRhdGVzICovXG4gIGdldCBjb21tdW5pdHkoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzKFwiY29tbXVuaXR5XCIpO1xuICB9XG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgYWNjZXNzIHRvIHVzZSBjb21tZXJjZSBmZWF0dXJlcyAoaS5lLiBjcmVhdGUgc3RvcmUgY2hhbm5lbHMpICovXG4gIGdldCBjb21tZXJjZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJjb21tZXJjZVwiKTtcbiAgfVxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgaGFzIGFjY2VzcyB0byBjcmVhdGUgbmV3cyBjaGFubmVscyAqL1xuICBnZXQgbmV3cygpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJuZXdzXCIpO1xuICB9XG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBpcyBhYmxlIHRvIGJlIGRpc2NvdmVyZWQgaW4gdGhlIGRpcmVjdG9yeSAqL1xuICBnZXQgZGlzY292ZXJhYmxlKCkge1xuICAgIHJldHVybiB0aGlzLmhhcyhcImRpc2NvdmVyYWJsZVwiKTtcbiAgfVxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgY2Fubm90IGJlIGRpc2NvdmVyYWJsZSAqL1xuICBnZXQgZGlzY292ZXJhYmxlRGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzKFwiZGlzY292ZXJhYmxlRGlzYWJsZWRcIik7XG4gIH1cbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGlzIGFibGUgdG8gYmUgZmVhdHVyZWQgaW4gdGhlIGRpcmVjdG9yeSAqL1xuICBnZXQgZmVhdHVyZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJmZWF0dXJlXCIpO1xuICB9XG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgYWNjZXNzIHRvIHNldCBhbiBhbmltYXRlZCBndWlsZCBpY29uICovXG4gIGdldCBhbmltYXRlZEljb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzKFwiYW5pbWF0ZWRJY29uXCIpO1xuICB9XG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgYWNjZXNzIHRvIHNldCBhIGd1aWxkIGJhbm5lciBpbWFnZSAqL1xuICBnZXQgYmFubmVyKCkge1xuICAgIHJldHVybiB0aGlzLmhhcyhcImJhbm5lclwiKTtcbiAgfVxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgaGFzIGVuYWJsZWQgdGhlIHdlbGNvbWUgc2NyZWVuICovXG4gIGdldCB3ZWxjb21lU2NyZWVuRW5hYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJ3ZWxjb21lU2NyZWVuRW5hYmxlZFwiKTtcbiAgfVxuICAvKiogV2hldGhlciB0aGUgZ3VpbGQgaGFzIGVuYWJsZWQgW01lbWJlcnNoaXAgU2NyZWVuaW5nXShodHRwczovL2Rpc2NvcmQuY29tL2RldmVsb3BlcnMvZG9jcy9yZXNvdXJjZXMvZ3VpbGQjbWVtYmVyc2hpcC1zY3JlZW5pbmctb2JqZWN0KSAqL1xuICBnZXQgbWVtYmVyVmVyaWZpY2F0aW9uR2F0ZUVuYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzKFwibWVtYmVyVmVyaWZpY2F0aW9uR2F0ZUVuYWJsZWRcIik7XG4gIH1cbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGNhbiBiZSBwcmV2aWV3ZWQgYmVmb3JlIGpvaW5pbmcgdmlhIE1lbWJlcnNoaXAgU2NyZWVuaW5nIG9yIHRoZSBkaXJlY3RvcnkgKi9cbiAgZ2V0IHByZXZpZXdFbmFibGVkKCkge1xuICAgIHJldHVybiB0aGlzLmhhcyhcInByZXZpZXdFbmFibGVkXCIpO1xuICB9XG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgZW5hYmxlZCB0aWNrZXRlZCBldmVudHMgKi9cbiAgZ2V0IHRpY2tldGVkRXZlbnRzRW5hYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJ0aWNrZXRlZEV2ZW50c0VuYWJsZWRcIik7XG4gIH1cbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGhhcyBlbmFibGVkIG1vbmV0aXphdGlvbiAqL1xuICBnZXQgbW9uZXRpemF0aW9uRW5hYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJtb25ldGl6YXRpb25FbmFibGVkXCIpO1xuICB9XG4gIC8qKiBXaGV0aGVyIHRoZSBndWlsZCBoYXMgaW5jcmVhc2VkIGN1c3RvbSBzdGlja2VyIHNsb3RzICovXG4gIGdldCBtb3JlU3RpY2tlcnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzKFwibW9yZVN0aWNrZXJzXCIpO1xuICB9XG5cbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGhhcyBhY2Nlc3MgdG8gY3JlYXRlIHByaXZhdGUgdGhyZWFkcyAqL1xuICBnZXQgcHJpdmF0ZVRocmVhZHMoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzKFwicHJpdmF0ZVRocmVhZHNcIik7XG4gIH1cbiAgLyoqIFdoZXRoZXIgdGhlIGd1aWxkIGlzIGFibGUgdG8gc2V0IHJvbGUgaWNvbnMgKi9cbiAgZ2V0IHJvbGVJY29ucygpIHtcbiAgICByZXR1cm4gdGhpcy5oYXMoXCJyb2xlSWNvbnNcIik7XG4gIH1cblxuICAvKiogQ2hlY2tzIHdoZXRoZXIgb3Igbm90IHRoZSBwZXJtaXNzaW9ucyBleGlzdCBpbiB0aGlzICovXG4gIGhhcyhwZXJtaXNzaW9uczogR3VpbGRUb2dnbGVLZXlzIHwgR3VpbGRUb2dnbGVLZXlzW10pIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkocGVybWlzc2lvbnMpKSByZXR1cm4gc3VwZXIuY29udGFpbnMoR3VpbGRUb2dnbGVbcGVybWlzc2lvbnNdKTtcblxuICAgIHJldHVybiBzdXBlci5jb250YWlucyhwZXJtaXNzaW9ucy5yZWR1Y2UoKGEsIGIpID0+IChhIHw9IEd1aWxkVG9nZ2xlW2JdKSwgMG4pKTtcbiAgfVxuXG4gIC8qKiBMaXN0cyBhbGwgdGhlIHRvZ2dsZXMgZm9yIHRoZSByb2xlIGFuZCB3aGV0aGVyIG9yIG5vdCBlYWNoIGlzIHRydWUgb3IgZmFsc2UuICovXG4gIGxpc3QoKSB7XG4gICAgY29uc3QganNvbjogUmVjb3JkPHN0cmluZywgYm9vbGVhbj4gPSB7fTtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhHdWlsZFRvZ2dsZSkpIHtcbiAgICAgIGpzb25ba2V5XSA9IHN1cGVyLmNvbnRhaW5zKHZhbHVlKTtcbiAgICB9XG5cbiAgICByZXR1cm4ganNvbiBhcyBSZWNvcmQ8R3VpbGRUb2dnbGVLZXlzLCBib29sZWFuPjtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBHdWlsZFRvZ2dsZUtleXMgPSBrZXlvZiB0eXBlb2YgR3VpbGRUb2dnbGU7XG4iXX0=