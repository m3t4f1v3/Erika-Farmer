export function transformApplicationCommandOption(bot, payload) {
    return {
        type: payload.type,
        name: payload.name,
        nameLocalizations: payload.name_localizations ?? undefined,
        description: payload.description,
        descriptionLocalizations: payload.description_localizations ?? undefined,
        required: payload.required ?? false,
        choices: payload.choices?.map((choice) => bot.transformers.applicationCommandOptionChoice(bot, choice)),
        autocomplete: payload.autocomplete,
        channelTypes: payload.channel_types,
        minValue: payload.min_value,
        maxValue: payload.max_value,
        options: payload.options?.map((option) => bot.transformers.applicationCommandOption(bot, option)),
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbGljYXRpb25Db21tYW5kT3B0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwbGljYXRpb25Db21tYW5kT3B0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BLE1BQU0sVUFBVSxpQ0FBaUMsQ0FDL0MsR0FBUSxFQUNSLE9BQXdDO0lBRXhDLE9BQU87UUFDTCxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUk7UUFDbEIsSUFBSSxFQUFFLE9BQU8sQ0FBQyxJQUFJO1FBQ2xCLGlCQUFpQixFQUFFLE9BQU8sQ0FBQyxrQkFBa0IsSUFBSSxTQUFTO1FBQzFELFdBQVcsRUFBRSxPQUFPLENBQUMsV0FBVztRQUNoQyx3QkFBd0IsRUFBRSxPQUFPLENBQUMseUJBQXlCLElBQUksU0FBUztRQUN4RSxRQUFRLEVBQUUsT0FBTyxDQUFDLFFBQVEsSUFBSSxLQUFLO1FBQ25DLE9BQU8sRUFBRSxPQUFPLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyw4QkFBOEIsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDdkcsWUFBWSxFQUFFLE9BQU8sQ0FBQyxZQUFZO1FBQ2xDLFlBQVksRUFBRSxPQUFPLENBQUMsYUFBYTtRQUNuQyxRQUFRLEVBQUUsT0FBTyxDQUFDLFNBQVM7UUFDM0IsUUFBUSxFQUFFLE9BQU8sQ0FBQyxTQUFTO1FBRTNCLE9BQU8sRUFBRSxPQUFPLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyx3QkFBd0IsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDbEcsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb3QgfSBmcm9tIFwiLi4vYm90LnRzXCI7XG5pbXBvcnQgeyBEaXNjb3JkQXBwbGljYXRpb25Db21tYW5kT3B0aW9uLCBEaXNjb3JkQXBwbGljYXRpb25Db21tYW5kT3B0aW9uQ2hvaWNlIH0gZnJvbSBcIi4uL3R5cGVzL2Rpc2NvcmQudHNcIjtcbmltcG9ydCB7IEFwcGxpY2F0aW9uQ29tbWFuZE9wdGlvblR5cGVzLCBDaGFubmVsVHlwZXMsIExvY2FsaXphdGlvbiB9IGZyb20gXCIuLi90eXBlcy9zaGFyZWQudHNcIjtcbmltcG9ydCB7IE9wdGlvbmFsaXplIH0gZnJvbSBcIi4uL3R5cGVzL3NoYXJlZC50c1wiO1xuaW1wb3J0IHsgQXBwbGljYXRpb25Db21tYW5kT3B0aW9uQ2hvaWNlIH0gZnJvbSBcIi4vYXBwbGljYXRpb25Db21tYW5kT3B0aW9uQ2hvaWNlLnRzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2Zvcm1BcHBsaWNhdGlvbkNvbW1hbmRPcHRpb24oXG4gIGJvdDogQm90LFxuICBwYXlsb2FkOiBEaXNjb3JkQXBwbGljYXRpb25Db21tYW5kT3B0aW9uLFxuKTogQXBwbGljYXRpb25Db21tYW5kT3B0aW9uIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBwYXlsb2FkLnR5cGUsXG4gICAgbmFtZTogcGF5bG9hZC5uYW1lLFxuICAgIG5hbWVMb2NhbGl6YXRpb25zOiBwYXlsb2FkLm5hbWVfbG9jYWxpemF0aW9ucyA/PyB1bmRlZmluZWQsXG4gICAgZGVzY3JpcHRpb246IHBheWxvYWQuZGVzY3JpcHRpb24sXG4gICAgZGVzY3JpcHRpb25Mb2NhbGl6YXRpb25zOiBwYXlsb2FkLmRlc2NyaXB0aW9uX2xvY2FsaXphdGlvbnMgPz8gdW5kZWZpbmVkLFxuICAgIHJlcXVpcmVkOiBwYXlsb2FkLnJlcXVpcmVkID8/IGZhbHNlLFxuICAgIGNob2ljZXM6IHBheWxvYWQuY2hvaWNlcz8ubWFwKChjaG9pY2UpID0+IGJvdC50cmFuc2Zvcm1lcnMuYXBwbGljYXRpb25Db21tYW5kT3B0aW9uQ2hvaWNlKGJvdCwgY2hvaWNlKSksXG4gICAgYXV0b2NvbXBsZXRlOiBwYXlsb2FkLmF1dG9jb21wbGV0ZSxcbiAgICBjaGFubmVsVHlwZXM6IHBheWxvYWQuY2hhbm5lbF90eXBlcyxcbiAgICBtaW5WYWx1ZTogcGF5bG9hZC5taW5fdmFsdWUsXG4gICAgbWF4VmFsdWU6IHBheWxvYWQubWF4X3ZhbHVlLFxuXG4gICAgb3B0aW9uczogcGF5bG9hZC5vcHRpb25zPy5tYXAoKG9wdGlvbikgPT4gYm90LnRyYW5zZm9ybWVycy5hcHBsaWNhdGlvbkNvbW1hbmRPcHRpb24oYm90LCBvcHRpb24pKSxcbiAgfTtcbn1cblxuLy8gVEhJUyBUUkFOU0ZPUk1FUiBIQVMgQSBDSVJDVUxBUiBSRUZFUkVOQ0UgVE8gQ0FMTCBJVFNFTEYgRk9SIE9QVElPTlMgU08gQU4gQVVUT01BVEVEIFRZUEUgQ0FOIE5PVCBCRSBDUkVBVEVEIVxuXG5leHBvcnQgaW50ZXJmYWNlIEFwcGxpY2F0aW9uQ29tbWFuZE9wdGlvbiB7XG4gIC8qKiBWYWx1ZSBvZiBBcHBsaWNhdGlvbiBDb21tYW5kIE9wdGlvbiBUeXBlICovXG4gIHR5cGU6IEFwcGxpY2F0aW9uQ29tbWFuZE9wdGlvblR5cGVzO1xuICAvKiogMS0zMiBjaGFyYWN0ZXIgbmFtZSBtYXRjaGluZyBsb3dlcmNhc2UgYF5bXFx3LV17MSwzMn0kYCAqL1xuICBuYW1lOiBzdHJpbmc7XG4gIC8qKiBMb2NhbGl6YXRpb24gb2JqZWN0IGZvciB0aGUgYG5hbWVgIGZpZWxkLiBWYWx1ZXMgZm9sbG93IHRoZSBzYW1lIHJlc3RyaWN0aW9ucyBhcyBgbmFtZWAgKi9cbiAgbmFtZUxvY2FsaXphdGlvbnM/OiBMb2NhbGl6YXRpb247XG4gIC8qKiAxLTEwMCBjaGFyYWN0ZXIgZGVzY3JpcHRpb24gKi9cbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgLyoqIExvY2FsaXphdGlvbiBvYmplY3QgZm9yIHRoZSBgZGVzY3JpcHRpb25gIGZpZWxkLiBWYWx1ZXMgZm9sbG93IHRoZSBzYW1lIHJlc3RyaWN0aW9ucyBhcyBgZGVzY3JpcHRpb25gICovXG4gIGRlc2NyaXB0aW9uTG9jYWxpemF0aW9ucz86IExvY2FsaXphdGlvbjtcbiAgLyoqIElmIHRoZSBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQgb3Igb3B0aW9uYWwtLWRlZmF1bHQgYGZhbHNlYCAqL1xuICByZXF1aXJlZD86IGJvb2xlYW47XG4gIC8qKiBDaG9pY2VzIGZvciBgc3RyaW5nYCBhbmQgYGludGAgdHlwZXMgZm9yIHRoZSB1c2VyIHRvIHBpY2sgZnJvbSAqL1xuICBjaG9pY2VzPzogQXBwbGljYXRpb25Db21tYW5kT3B0aW9uQ2hvaWNlW107XG4gIC8qKiBJZiB0aGUgb3B0aW9uIGlzIGEgc3ViY29tbWFuZCBvciBzdWJjb21tYW5kIGdyb3VwIHR5cGUsIHRoaXMgbmVzdGVkIG9wdGlvbnMgd2lsbCBiZSB0aGUgcGFyYW1ldGVycyAqL1xuICBvcHRpb25zPzogQXBwbGljYXRpb25Db21tYW5kT3B0aW9uW107XG4gIC8qKiBpZiBhdXRvY29tcGxldGUgaW50ZXJhY3Rpb25zIGFyZSBlbmFibGVkIGZvciB0aGlzIGBTdHJpbmdgLCBgSW50ZWdlcmAsIG9yIGBOdW1iZXJgIHR5cGUgb3B0aW9uICovXG4gIGF1dG9jb21wbGV0ZT86IGJvb2xlYW47XG4gIC8qKiBJZiB0aGUgb3B0aW9uIGlzIGEgY2hhbm5lbCB0eXBlLCB0aGUgY2hhbm5lbHMgc2hvd24gd2lsbCBiZSByZXN0cmljdGVkIHRvIHRoZXNlIHR5cGVzICovXG4gIGNoYW5uZWxUeXBlcz86IENoYW5uZWxUeXBlc1tdO1xuICAvKiogTWluaW11bSBudW1iZXIgZGVzaXJlZC4gKi9cbiAgbWluVmFsdWU/OiBudW1iZXI7XG4gIC8qKiBNYXhpbXVtIG51bWJlciBkZXNpcmVkLiAqL1xuICBtYXhWYWx1ZT86IG51bWJlcjtcbn1cbiJdfQ==