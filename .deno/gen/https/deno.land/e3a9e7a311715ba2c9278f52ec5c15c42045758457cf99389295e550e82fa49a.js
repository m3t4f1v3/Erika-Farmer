export function editBotProfile(bot) {
    const editBotProfileOld = bot.helpers.editBotProfile;
    bot.helpers.editBotProfile = async function (options) {
        if (!options.username && options.botAvatarURL === undefined) {
            throw new Error("There was no change to the username or avatar found in the request.");
        }
        if (options.username) {
            if (options.username.length > 32) {
                throw new Error("A username for the bot must be less than 32 characters.");
            }
            if (options.username.length < 2) {
                throw new Error("A username for the bot can not be less than 2 characters.");
            }
            if (["@", "#", ":", "```"].some((char) => options.username.includes(char))) {
                throw new Error("A bot username can not include @ # : or ```");
            }
            if (["discordtag", "everyone", "here"].includes(options.username)) {
                throw new Error("A bot username can not be set to `discordtag` `everyone` and `here`");
            }
        }
        return await editBotProfileOld(options);
    };
}
export default function setupMiscPermChecks(bot) {
    editBotProfile(bot);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sVUFBVSxjQUFjLENBQUMsR0FBaUI7SUFDOUMsTUFBTSxpQkFBaUIsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQztJQUVyRCxHQUFHLENBQUMsT0FBTyxDQUFDLGNBQWMsR0FBRyxLQUFLLFdBQ2hDLE9BQU87UUFHUCxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsSUFBSSxPQUFPLENBQUMsWUFBWSxLQUFLLFNBQVMsRUFBRTtZQUMzRCxNQUFNLElBQUksS0FBSyxDQUNiLHFFQUFxRSxDQUN0RSxDQUFDO1NBQ0g7UUFFRCxJQUFJLE9BQU8sQ0FBQyxRQUFRLEVBQUU7WUFDcEIsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxFQUFFLEVBQUU7Z0JBQ2hDLE1BQU0sSUFBSSxLQUFLLENBQ2IseURBQXlELENBQzFELENBQUM7YUFDSDtZQUNELElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO2dCQUMvQixNQUFNLElBQUksS0FBSyxDQUNiLDJEQUEyRCxDQUM1RCxDQUFDO2FBQ0g7WUFDRCxJQUNFLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsUUFBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUN2RTtnQkFDQSxNQUFNLElBQUksS0FBSyxDQUFDLDZDQUE2QyxDQUFDLENBQUM7YUFDaEU7WUFDRCxJQUFJLENBQUMsWUFBWSxFQUFFLFVBQVUsRUFBRSxNQUFNLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO2dCQUNqRSxNQUFNLElBQUksS0FBSyxDQUNiLHFFQUFxRSxDQUN0RSxDQUFDO2FBQ0g7U0FDRjtRQUVELE9BQU8sTUFBTSxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMxQyxDQUFDLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxDQUFDLE9BQU8sVUFBVSxtQkFBbUIsQ0FBQyxHQUFpQjtJQUMzRCxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDdEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvdFdpdGhDYWNoZSB9IGZyb20gXCIuLi8uLi9kZXBzLnRzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBlZGl0Qm90UHJvZmlsZShib3Q6IEJvdFdpdGhDYWNoZSkge1xuICBjb25zdCBlZGl0Qm90UHJvZmlsZU9sZCA9IGJvdC5oZWxwZXJzLmVkaXRCb3RQcm9maWxlO1xuXG4gIGJvdC5oZWxwZXJzLmVkaXRCb3RQcm9maWxlID0gYXN5bmMgZnVuY3Rpb24gKFxuICAgIG9wdGlvbnMsXG4gICkge1xuICAgIC8vIE5vdGhpbmcgd2FzIGVkaXRlZFxuICAgIGlmICghb3B0aW9ucy51c2VybmFtZSAmJiBvcHRpb25zLmJvdEF2YXRhclVSTCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiVGhlcmUgd2FzIG5vIGNoYW5nZSB0byB0aGUgdXNlcm5hbWUgb3IgYXZhdGFyIGZvdW5kIGluIHRoZSByZXF1ZXN0LlwiLFxuICAgICAgKTtcbiAgICB9XG4gICAgLy8gQ2hlY2sgdXNlcm5hbWUgcmVxdWlyZW1lbnRzIGlmIHVzZXJuYW1lIHdhcyBwcm92aWRlZFxuICAgIGlmIChvcHRpb25zLnVzZXJuYW1lKSB7XG4gICAgICBpZiAob3B0aW9ucy51c2VybmFtZS5sZW5ndGggPiAzMikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgXCJBIHVzZXJuYW1lIGZvciB0aGUgYm90IG11c3QgYmUgbGVzcyB0aGFuIDMyIGNoYXJhY3RlcnMuXCIsXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBpZiAob3B0aW9ucy51c2VybmFtZS5sZW5ndGggPCAyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBcIkEgdXNlcm5hbWUgZm9yIHRoZSBib3QgY2FuIG5vdCBiZSBsZXNzIHRoYW4gMiBjaGFyYWN0ZXJzLlwiLFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgaWYgKFxuICAgICAgICBbXCJAXCIsIFwiI1wiLCBcIjpcIiwgXCJgYGBcIl0uc29tZSgoY2hhcikgPT4gb3B0aW9ucy51c2VybmFtZSEuaW5jbHVkZXMoY2hhcikpXG4gICAgICApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQSBib3QgdXNlcm5hbWUgY2FuIG5vdCBpbmNsdWRlIEAgIyA6IG9yIGBgYFwiKTtcbiAgICAgIH1cbiAgICAgIGlmIChbXCJkaXNjb3JkdGFnXCIsIFwiZXZlcnlvbmVcIiwgXCJoZXJlXCJdLmluY2x1ZGVzKG9wdGlvbnMudXNlcm5hbWUpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBcIkEgYm90IHVzZXJuYW1lIGNhbiBub3QgYmUgc2V0IHRvIGBkaXNjb3JkdGFnYCBgZXZlcnlvbmVgIGFuZCBgaGVyZWBcIixcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYXdhaXQgZWRpdEJvdFByb2ZpbGVPbGQob3B0aW9ucyk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNldHVwTWlzY1Blcm1DaGVja3MoYm90OiBCb3RXaXRoQ2FjaGUpIHtcbiAgZWRpdEJvdFByb2ZpbGUoYm90KTtcbn1cbiJdfQ==