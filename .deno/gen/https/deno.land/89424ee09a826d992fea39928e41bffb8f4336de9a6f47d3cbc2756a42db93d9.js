/** Sets a thread channel to be archived. */ export async function archiveThread(bot, threadId) {
    return await editThread(bot, threadId, {
        archived: true
    });
}
/** Sets a thread channel to be unarchived. */ export async function unarchiveThread(bot, threadId) {
    return await editThread(bot, threadId, {
        archived: false
    });
}
/** Sets a thread channel to be locked. */ export async function lockThread(bot, threadId) {
    return await editThread(bot, threadId, {
        locked: true
    });
}
/** Sets a thread channel to be unlocked. */ export async function unlockThread(bot, threadId) {
    return await editThread(bot, threadId, {
        locked: false
    });
}
/** Update a thread's settings. Requires the `MANAGE_CHANNELS` permission for the guild. */ export async function editThread(bot, threadId, options, reason) {
    const result = await bot.rest.runMethod(bot.rest, "PATCH", bot.constants.routes.CHANNEL(threadId), {
        name: options.name,
        archived: options.archived,
        auto_archive_duration: options.autoArchiveDuration,
        locked: options.locked,
        rate_limit_per_user: options.rateLimitPerUser,
        reason
    });
    return bot.transformers.channel(bot, {
        channel: result,
        guildId: result.guild_id ? bot.transformers.snowflake(result.guild_id) : undefined
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb3QsIERpc2NvcmRDaGFubmVsIH0gZnJvbSBcIi4uL2RlcHMudHNcIjtcblxuLyoqIFNldHMgYSB0aHJlYWQgY2hhbm5lbCB0byBiZSBhcmNoaXZlZC4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhcmNoaXZlVGhyZWFkKGJvdDogQm90LCB0aHJlYWRJZDogYmlnaW50KSB7XG4gIHJldHVybiBhd2FpdCBlZGl0VGhyZWFkKGJvdCwgdGhyZWFkSWQsIHsgYXJjaGl2ZWQ6IHRydWUgfSk7XG59XG5cbi8qKiBTZXRzIGEgdGhyZWFkIGNoYW5uZWwgdG8gYmUgdW5hcmNoaXZlZC4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1bmFyY2hpdmVUaHJlYWQoYm90OiBCb3QsIHRocmVhZElkOiBiaWdpbnQpIHtcbiAgcmV0dXJuIGF3YWl0IGVkaXRUaHJlYWQoYm90LCB0aHJlYWRJZCwgeyBhcmNoaXZlZDogZmFsc2UgfSk7XG59XG5cbi8qKiBTZXRzIGEgdGhyZWFkIGNoYW5uZWwgdG8gYmUgbG9ja2VkLiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvY2tUaHJlYWQoYm90OiBCb3QsIHRocmVhZElkOiBiaWdpbnQpIHtcbiAgcmV0dXJuIGF3YWl0IGVkaXRUaHJlYWQoYm90LCB0aHJlYWRJZCwgeyBsb2NrZWQ6IHRydWUgfSk7XG59XG5cbi8qKiBTZXRzIGEgdGhyZWFkIGNoYW5uZWwgdG8gYmUgdW5sb2NrZWQuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdW5sb2NrVGhyZWFkKGJvdDogQm90LCB0aHJlYWRJZDogYmlnaW50KSB7XG4gIHJldHVybiBhd2FpdCBlZGl0VGhyZWFkKGJvdCwgdGhyZWFkSWQsIHsgbG9ja2VkOiBmYWxzZSB9KTtcbn1cblxuLyoqIFVwZGF0ZSBhIHRocmVhZCdzIHNldHRpbmdzLiBSZXF1aXJlcyB0aGUgYE1BTkFHRV9DSEFOTkVMU2AgcGVybWlzc2lvbiBmb3IgdGhlIGd1aWxkLiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGVkaXRUaHJlYWQoYm90OiBCb3QsIHRocmVhZElkOiBiaWdpbnQsIG9wdGlvbnM6IE1vZGlmeVRocmVhZCwgcmVhc29uPzogc3RyaW5nKSB7XG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGJvdC5yZXN0LnJ1bk1ldGhvZDxEaXNjb3JkQ2hhbm5lbD4oXG4gICAgYm90LnJlc3QsXG4gICAgXCJQQVRDSFwiLFxuICAgIGJvdC5jb25zdGFudHMucm91dGVzLkNIQU5ORUwodGhyZWFkSWQpLFxuICAgIHtcbiAgICAgIG5hbWU6IG9wdGlvbnMubmFtZSxcbiAgICAgIGFyY2hpdmVkOiBvcHRpb25zLmFyY2hpdmVkLFxuICAgICAgYXV0b19hcmNoaXZlX2R1cmF0aW9uOiBvcHRpb25zLmF1dG9BcmNoaXZlRHVyYXRpb24sXG4gICAgICBsb2NrZWQ6IG9wdGlvbnMubG9ja2VkLFxuICAgICAgcmF0ZV9saW1pdF9wZXJfdXNlcjogb3B0aW9ucy5yYXRlTGltaXRQZXJVc2VyLFxuICAgICAgcmVhc29uLFxuICAgIH0sXG4gICk7XG5cbiAgcmV0dXJuIGJvdC50cmFuc2Zvcm1lcnMuY2hhbm5lbChib3QsIHtcbiAgICBjaGFubmVsOiByZXN1bHQsXG4gICAgZ3VpbGRJZDogcmVzdWx0Lmd1aWxkX2lkID8gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocmVzdWx0Lmd1aWxkX2lkKSA6IHVuZGVmaW5lZCxcbiAgfSk7XG59XG5cbi8qKiBodHRwczovL2Rpc2NvcmQuY29tL2RldmVsb3BlcnMvZG9jcy9yZXNvdXJjZXMvY2hhbm5lbCNtb2RpZnktY2hhbm5lbC1qc29uLXBhcmFtcy10aHJlYWQgKi9cbmV4cG9ydCBpbnRlcmZhY2UgTW9kaWZ5VGhyZWFkIHtcbiAgLyoqIDEtMTAwIGNoYXJhY3RlciB0aHJlYWQgbmFtZSAqL1xuICBuYW1lPzogc3RyaW5nO1xuICAvKiogV2hldGhlciB0aGUgdGhyZWFkIGlzIGFyY2hpdmVkICovXG4gIGFyY2hpdmVkPzogYm9vbGVhbjtcbiAgLyoqIER1cmF0aW9uIGluIG1pbnV0ZXMgdG8gYXV0b21hdGljYWxseSBhcmNoaXZlIHRoZSB0aHJlYWQgYWZ0ZXIgcmVjZW50IGFjdGl2aXR5ICovXG4gIGF1dG9BcmNoaXZlRHVyYXRpb24/OiA2MCB8IDE0NDAgfCA0MzIwIHwgMTAwODA7XG4gIC8qKiBXaGVuIGEgdGhyZWFkIGlzIGxvY2tlZCwgb25seSB1c2VycyB3aXRoIGBNQU5BR0VfVEhSRUFEU2AgY2FuIHVuYXJjaGl2ZSBpdCAqL1xuICBsb2NrZWQ/OiBib29sZWFuO1xuICAvKiogd2hldGhlciBub24tbW9kZXJhdG9ycyBjYW4gYWRkIG90aGVyIG5vbi1tb2RlcmF0b3JzIHRvIGEgdGhyZWFkOyBvbmx5IGF2YWlsYWJsZSBvbiBwcml2YXRlIHRocmVhZHMgKi9cbiAgaW52aXRhYmxlPzogYm9vbGVhbjtcbiAgLyoqIEFtb3VudCBvZiBzZWNvbmRzIGEgdXNlciBoYXMgdG8gd2FpdCBiZWZvcmUgc2VuZGluZyBhbm90aGVyIG1lc3NhZ2UgKDAtMjE2MDApOyBib3RzLCBhcyB3ZWxsIGFzIHVzZXJzIHdpdGggdGhlIHBlcm1pc3Npb24gYE1BTkFHRV9NRVNTQUdFU2AsIGBNQU5BR0VfVEhSRUFEYCBvciBgTUFOQUdFX0NIQU5ORUxgIGFyZSB1bmFmZmVjdGVkICovXG4gIHJhdGVMaW1pdFBlclVzZXI/OiBudW1iZXI7XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsNENBQTRDLENBQzVDLE9BQU8sZUFBZSxhQUFhLENBQUMsR0FBUSxFQUFFLFFBQWdCLEVBQUU7SUFDOUQsT0FBTyxNQUFNLFVBQVUsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFO1FBQUUsUUFBUSxFQUFFLElBQUk7S0FBRSxDQUFDLENBQUM7Q0FDNUQ7QUFFRCw4Q0FBOEMsQ0FDOUMsT0FBTyxlQUFlLGVBQWUsQ0FBQyxHQUFRLEVBQUUsUUFBZ0IsRUFBRTtJQUNoRSxPQUFPLE1BQU0sVUFBVSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUU7UUFBRSxRQUFRLEVBQUUsS0FBSztLQUFFLENBQUMsQ0FBQztDQUM3RDtBQUVELDBDQUEwQyxDQUMxQyxPQUFPLGVBQWUsVUFBVSxDQUFDLEdBQVEsRUFBRSxRQUFnQixFQUFFO0lBQzNELE9BQU8sTUFBTSxVQUFVLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRTtRQUFFLE1BQU0sRUFBRSxJQUFJO0tBQUUsQ0FBQyxDQUFDO0NBQzFEO0FBRUQsNENBQTRDLENBQzVDLE9BQU8sZUFBZSxZQUFZLENBQUMsR0FBUSxFQUFFLFFBQWdCLEVBQUU7SUFDN0QsT0FBTyxNQUFNLFVBQVUsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFO1FBQUUsTUFBTSxFQUFFLEtBQUs7S0FBRSxDQUFDLENBQUM7Q0FDM0Q7QUFFRCwyRkFBMkYsQ0FDM0YsT0FBTyxlQUFlLFVBQVUsQ0FBQyxHQUFRLEVBQUUsUUFBZ0IsRUFBRSxPQUFxQixFQUFFLE1BQWUsRUFBRTtJQUNuRyxNQUFNLE1BQU0sR0FBRyxNQUFNLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUNyQyxHQUFHLENBQUMsSUFBSSxFQUNSLE9BQU8sRUFDUCxHQUFHLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQ3RDO1FBQ0UsSUFBSSxFQUFFLE9BQU8sQ0FBQyxJQUFJO1FBQ2xCLFFBQVEsRUFBRSxPQUFPLENBQUMsUUFBUTtRQUMxQixxQkFBcUIsRUFBRSxPQUFPLENBQUMsbUJBQW1CO1FBQ2xELE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTTtRQUN0QixtQkFBbUIsRUFBRSxPQUFPLENBQUMsZ0JBQWdCO1FBQzdDLE1BQU07S0FDUCxDQUNGLEFBQUM7SUFFRixPQUFPLEdBQUcsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRTtRQUNuQyxPQUFPLEVBQUUsTUFBTTtRQUNmLE9BQU8sRUFBRSxNQUFNLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBRyxTQUFTO0tBQ25GLENBQUMsQ0FBQztDQUNKIn0=