import { Collection } from "../../util/collection.ts";
export async function searchMembers(bot, guildId, query, options) {
    if (options?.limit) {
        if (options.limit < 1)
            throw new Error(bot.constants.Errors.MEMBER_SEARCH_LIMIT_TOO_LOW);
        if (options.limit > 1000) {
            throw new Error(bot.constants.Errors.MEMBER_SEARCH_LIMIT_TOO_HIGH);
        }
    }
    const result = await bot.rest.runMethod(bot.rest, "GET", bot.constants.routes.GUILD_MEMBERS_SEARCH(guildId, query, options));
    return new Collection(result.map((member) => {
        const m = bot.transformers.member(bot, member, guildId, bot.transformers.snowflake(member.user.id));
        return [m.id, m];
    }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoTWVtYmVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNlYXJjaE1lbWJlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBTXRELE1BQU0sQ0FBQyxLQUFLLFVBQVUsYUFBYSxDQUNqQyxHQUFRLEVBQ1IsT0FBZSxFQUNmLEtBQWEsRUFDYixPQUFzQztJQUV0QyxJQUFJLE9BQU8sRUFBRSxLQUFLLEVBQUU7UUFDbEIsSUFBSSxPQUFPLENBQUMsS0FBSyxHQUFHLENBQUM7WUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLDJCQUEyQixDQUFDLENBQUM7UUFDekYsSUFBSSxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksRUFBRTtZQUN4QixNQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLDRCQUE0QixDQUFDLENBQUM7U0FDcEU7S0FDRjtJQUVELE1BQU0sTUFBTSxHQUFHLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQ3JDLEdBQUcsQ0FBQyxJQUFJLEVBQ1IsS0FBSyxFQUNMLEdBQUcsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLG9CQUFvQixDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQ25FLENBQUM7SUFFRixPQUFPLElBQUksVUFBVSxDQUNuQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7UUFDcEIsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3BHLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ25CLENBQUMsQ0FBQyxDQUNILENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBTZWFyY2hNZW1iZXJzIH0gZnJvbSBcIi4uLy4uL3R5cGVzL2Rpc2NvcmRlbm8udHNcIjtcbmltcG9ydCB0eXBlIHsgRGlzY29yZE1lbWJlcldpdGhVc2VyIH0gZnJvbSBcIi4uLy4uL3R5cGVzL2Rpc2NvcmQudHNcIjtcblxuaW1wb3J0IHsgQ29sbGVjdGlvbiB9IGZyb20gXCIuLi8uLi91dGlsL2NvbGxlY3Rpb24udHNcIjtcbmltcG9ydCB7IEJvdCB9IGZyb20gXCIuLi8uLi9ib3QudHNcIjtcblxuLyoqXG4gKiBRdWVyeSBzdHJpbmcgdG8gbWF0Y2ggdXNlcm5hbWUocykgYW5kIG5pY2tuYW1lKHMpIGFnYWluc3RcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNlYXJjaE1lbWJlcnMoXG4gIGJvdDogQm90LFxuICBndWlsZElkOiBiaWdpbnQsXG4gIHF1ZXJ5OiBzdHJpbmcsXG4gIG9wdGlvbnM/OiBPbWl0PFNlYXJjaE1lbWJlcnMsIFwicXVlcnlcIj4sXG4pIHtcbiAgaWYgKG9wdGlvbnM/LmxpbWl0KSB7XG4gICAgaWYgKG9wdGlvbnMubGltaXQgPCAxKSB0aHJvdyBuZXcgRXJyb3IoYm90LmNvbnN0YW50cy5FcnJvcnMuTUVNQkVSX1NFQVJDSF9MSU1JVF9UT09fTE9XKTtcbiAgICBpZiAob3B0aW9ucy5saW1pdCA+IDEwMDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihib3QuY29uc3RhbnRzLkVycm9ycy5NRU1CRVJfU0VBUkNIX0xJTUlUX1RPT19ISUdIKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCByZXN1bHQgPSBhd2FpdCBib3QucmVzdC5ydW5NZXRob2Q8RGlzY29yZE1lbWJlcldpdGhVc2VyW10+KFxuICAgIGJvdC5yZXN0LFxuICAgIFwiR0VUXCIsXG4gICAgYm90LmNvbnN0YW50cy5yb3V0ZXMuR1VJTERfTUVNQkVSU19TRUFSQ0goZ3VpbGRJZCwgcXVlcnksIG9wdGlvbnMpLFxuICApO1xuXG4gIHJldHVybiBuZXcgQ29sbGVjdGlvbihcbiAgICByZXN1bHQubWFwKChtZW1iZXIpID0+IHtcbiAgICAgIGNvbnN0IG0gPSBib3QudHJhbnNmb3JtZXJzLm1lbWJlcihib3QsIG1lbWJlciwgZ3VpbGRJZCwgYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UobWVtYmVyLnVzZXIuaWQpKTtcbiAgICAgIHJldHVybiBbbS5pZCwgbV07XG4gICAgfSksXG4gICk7XG59XG4iXX0=