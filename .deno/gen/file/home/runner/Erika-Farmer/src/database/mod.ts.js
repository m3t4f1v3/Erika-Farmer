import { decode, encode, Kwik } from "../../deps.ts";
import { logger } from "../utils/logger.ts";
const log = logger({ name: "DB Manager" });
log.info("Initializing Database");
const kwik = new Kwik();
kwik.msgpackExtensionCodec.register({
    type: 0,
    encode: (object) => {
        if (typeof object === "bigint") {
            if (object <= Number.MAX_SAFE_INTEGER && object >= Number.MIN_SAFE_INTEGER) {
                return encode(parseInt(object.toString(), 10), {});
            }
            else {
                return encode(object.toString(), {});
            }
        }
        else {
            return null;
        }
    },
    decode: (data) => {
        return BigInt(decode(data, {}));
    },
});
await kwik.init();
log.info("Database Initialized!");
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFNUMsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUM7QUFFM0MsR0FBRyxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0FBRWxDLE1BQU0sSUFBSSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7QUFHeEIsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFFBQVEsQ0FBQztJQUNsQyxJQUFJLEVBQUUsQ0FBQztJQUNQLE1BQU0sRUFBRSxDQUFDLE1BQWUsRUFBcUIsRUFBRTtRQUM3QyxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtZQUM5QixJQUNFLE1BQU0sSUFBSSxNQUFNLENBQUMsZ0JBQWdCLElBQUksTUFBTSxJQUFJLE1BQU0sQ0FBQyxnQkFBZ0IsRUFDdEU7Z0JBQ0EsT0FBTyxNQUFNLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQzthQUNwRDtpQkFBTTtnQkFDTCxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7YUFDdEM7U0FDRjthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUM7U0FDYjtJQUNILENBQUM7SUFDRCxNQUFNLEVBQUUsQ0FBQyxJQUFnQixFQUFFLEVBQUU7UUFDM0IsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxFQUFFLENBQVcsQ0FBQyxDQUFDO0lBQzVDLENBQUM7Q0FDRixDQUFDLENBQUM7QUFHSCxNQUFNLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUVsQixHQUFHLENBQUMsSUFBSSxDQUFDLHVCQUF1QixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGUsIGVuY29kZSwgS3dpayB9IGZyb20gXCIuLi8uLi9kZXBzLnRzXCI7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tIFwiLi4vdXRpbHMvbG9nZ2VyLnRzXCI7XG5cbmNvbnN0IGxvZyA9IGxvZ2dlcih7IG5hbWU6IFwiREIgTWFuYWdlclwiIH0pO1xuXG5sb2cuaW5mbyhcIkluaXRpYWxpemluZyBEYXRhYmFzZVwiKTtcblxuY29uc3Qga3dpayA9IG5ldyBLd2lrKCk7XG5cbi8vIEFkZCBCaWdJbnQgU3VwcG9ydFxua3dpay5tc2dwYWNrRXh0ZW5zaW9uQ29kZWMucmVnaXN0ZXIoe1xuICB0eXBlOiAwLFxuICBlbmNvZGU6IChvYmplY3Q6IHVua25vd24pOiBVaW50OEFycmF5IHwgbnVsbCA9PiB7XG4gICAgaWYgKHR5cGVvZiBvYmplY3QgPT09IFwiYmlnaW50XCIpIHtcbiAgICAgIGlmIChcbiAgICAgICAgb2JqZWN0IDw9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSICYmIG9iamVjdCA+PSBOdW1iZXIuTUlOX1NBRkVfSU5URUdFUlxuICAgICAgKSB7XG4gICAgICAgIHJldHVybiBlbmNvZGUocGFyc2VJbnQob2JqZWN0LnRvU3RyaW5nKCksIDEwKSwge30pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGVuY29kZShvYmplY3QudG9TdHJpbmcoKSwge30pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH0sXG4gIGRlY29kZTogKGRhdGE6IFVpbnQ4QXJyYXkpID0+IHtcbiAgICByZXR1cm4gQmlnSW50KGRlY29kZShkYXRhLCB7fSkgYXMgc3RyaW5nKTtcbiAgfSxcbn0pO1xuXG4vLyBJbml0aWFsaXplIHRoZSBEYXRhYmFzZVxuYXdhaXQga3dpay5pbml0KCk7XG5cbmxvZy5pbmZvKFwiRGF0YWJhc2UgSW5pdGlhbGl6ZWQhXCIpO1xuIl19